Utterance: show me all museums
TT: 
@wd . entity ( ) filter instance_of == " Q207694 " ^^wd:entity_subdomain ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
}

====
Utterance: show me museums named after louvre palace
TT: 
@wd . entity ( ) filter contains ( named_after , " Q1075988 " ^^wd:p_named_after ) && instance_of == " Q207694 " ^^wd:entity_subdomain ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
    ?x <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
}

====
Utterance: show me the owner of museums named after louvre palace
TT: 
[ owned_by ] of @wd . entity ( ) filter instance_of == " Q207694 " ^^wd:entity_subdomain && contains ( named_after , " Q1075988 " ^^wd:p_named_after ) ;
SPARQL: 
SELECT DISTINCT ?y WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
    ?x <http://www.wikidata.org/prop/direct/P127> ?y.
    ?x <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
}

====
Utterance: Who was the doctoral supervisor of Albert Einstein
TT:
[ doctoral_advisor ] of @wd . human ( ) filter id == " Q937 " ^^wd:human ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?x.
}

====
Utterance: Did Kaurism√§ki ever win the Grand Prix at Cannes?
TT: 
[ contains ( award_received , " Q844804 " ^^wd:p_award_received ) ] of @wd . human ( ) filter id == " Q276186 " ^^wd:human ;
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P166>  <http://www.wikidata.org/entity/Q844804>. 
}

====
Utterance: Which countries have more than two official languages?
TT: 
@wd . country ( ) filter count ( official_language ) >= 2 ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256>. 
    ?x <http://www.wikidata.org/prop/direct/P37> ?y. 
} GROUP BY ?x HAVING(COUNT(?y) > 2)

====
Utterance: What is the highest mountain in Australia?
TT: 
sort ( elevation_above_sea_level desc of @wd . mountain ( ) filter contains ( continent , " Q3960 " ^^wd:p_continent ) ) [ 1 ] ;
SPARQL:
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502>. 
    ?x <http://www.wikidata.org/prop/direct/P2044> ?y. 
    ?x <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q3960>. 
} ORDER BY DESC(?y) LIMIT 1

==== 
Utterance: Are tree frogs a type of amphibian?
TT:
[ contains ( < parent_taxon * > , " Q10908 " ^^wd:p_parent_taxon ) ] of @wd . taxon ( ) filter id == " Q53696 " ^^wd:taxon ;
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q53696> <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q10908>. 
}

====
Utterance: Give me the websites of companies with more than 500000 employees.
TT:
[ official_website ] of @wd . organization ( ) filter instance_of == " Q4830453 " ^^wd:organization_subdomain && employees >= 500000 ;
SPARQL:
SELECT DISTINCT ?y WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4830453>. 
    ?x <http://www.wikidata.org/prop/direct/P856> ?y. 
    ?x <http://www.wikidata.org/prop/direct/P1128> ?z. 
    FILTER(?z > 500000). 
}

====
Utterance: Is there a video game called Battle Chess?
TT: 
[ count >= 1 ] of count ( @wd . video_game ( ) filter id =~ " battle chess " ) ;
SPARQL:  
ASK WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q7889>. 
    ?x <http://www.w3.org/2000/01/rdf-schema#label> "battle chess"@en.
}

====
Utterance: Was U.S. president Jackson involved in a war?
TT:
[ count ( conflict ) >= 1 ] of @wd . human ( ) filter id == " Q11817 " ^^wd:human ;
SPARQL: 
ASK WHERE { 
    <http://www.wikidata.org/entity/Q11817> <http://www.wikidata.org/prop/direct/P607> ?x. 
}

====
Utterance: in which u . s . state is mount mckinley located ?
TT: 
[ located_in_the_administrative_territorial_entity ] of @wd . mountain ( ) filter id == " Q130018 " ^^wd:mountain ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?x.
}

====
Utterance: which indian company has the most employees ?
TT: 
sort ( employees desc of @wd . organization ( ) filter contains ( country , " Q668 " ^^wd:p_country ) && instance_of == " Q4830453 " ^^wd:organization_subdomain ) [ 1 ] ;
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4830453>. 
    ?x <http://www.wikidata.org/prop/direct/P1128> ?y.  
    ?x <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q668>.
} ORDER BY DESC(?y) LIMIT 1

====
Utterance: show me protests started after 2000?
TT: 
@wd . entity ( ) filter instance_of == " Q273120 " ^^wd:entity_subdomain && start_time >= new Date ( 2000 ) ;
SPARQL:
SELECT DISTINCT ?x WHERE {
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q273120>. 
    ?x <http://www.wikidata.org/prop/direct/P580> ?y.
    FILTER(?y > "2000-01-01T00:00:00.000Z"^^<http://www.w3.org/2001/XMLSchema#dateTime>).
}

====
Utterance: Which museum exhibits The Scream by Munch?
TT: 
[ < has_parts / location > : Entity ( wd:art_museum ) ] of @wd . entity ( ) filter id == " Q471379 " ^^wd:entity ;
SPARQL:
SELECT DISTINCT ?x WHERE { 
    <http://www.wikidata.org/entity/Q471379> <http://www.wikidata.org/prop/direct/P527>/<http://www.wikidata.org/prop/direct/P276> ?x. 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
}


====
Utterance: who are the US presidents since 2000? 
TT:
[ head_of_government filter end_time >= new Date ( 2000 ) ] of @wd . country ( ) filter id == " Q30 " ^^wd:country ;
SPARQL: 
SELECT DISTINCT ?x WHERE {
    <http://www.wikidata.org/entity/Q30> <http://www.wikidata.org/prop/P6> ?p.
    ?p <http://www.wikidata.org/prop/statement/P6> ?x.
    ?p <http://www.wikidata.org/prop/qualifier/P582> ?y.
    FILTER(?y > "2000-01-01T00:00:00.000Z"^^<http://www.w3.org/2001/XMLSchema#dateTime>).
}