Utterance: show me all museums
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>.
}
TT: 
@wd . entity ( ) filter instance_of == " Q207694 " ^^wd:entity_subdomain ;

====
Utterance: show me museums named after louvre palace
SPARQL: 
SELECT DISTINCT ?x WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>;
       <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
}
TT: 
@wd . entity ( ) filter contains ( named_after , " Q1075988 " ^^wd:p_named_after ) && instance_of == " Q207694 " ^^wd:entity_subdomain ;

====
Utterance: show me the owner of museums named after louvre palace
SPARQL: 
SELECT DISTINCT ?y WHERE { 
    ?x <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>;
       <http://www.wikidata.org/prop/direct/P138> <http://www.wikidata.org/entity/Q1075988>.
    ?x <http://www.wikidata.org/prop/direct/P127> ?y.
}
TT: 
[ owned_by ] of @wd . entity ( ) filter instance_of == " Q207694 " ^^wd:entity_subdomain && contains ( named_after , " Q1075988 " ^^wd:p_named_after ) ;

====
Utterance: Who was the doctoral supervisor of Albert Einstein
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q937> <http://www.wikidata.org/prop/direct/P184> ?uri
}
TT:
[ doctoral_advisor ] of @wd . human ( ) filter id == " Q937 " ^^wd:human ;

====
Utterance: Did Kaurism√§ki ever win the Grand Prix at Cannes?
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q276186> <http://www.wikidata.org/prop/direct/P166>  <http://www.wikidata.org/entity/Q844804> . 
}
TT: 
[ contains ( award_received , " Q844804 " ^^wd:p_award_received ) ] of @wd . human ( ) filter id == " Q276186 " ^^wd:human ;

====
Utterance: Which countries have more than two official languages?
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . 
    ?uri <http://www.wikidata.org/prop/direct/P37> ?language . 
} GROUP BY ?uri HAVING(COUNT(?language)>2)
TT: 
@wd . country ( ) filter count ( official_language ) >= 2 ;

====
Utterance: What is the highest mountain in Australia?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502> . 
    ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q3960> . 
    ?uri <http://www.wikidata.org/prop/direct/P2044> ?height. 
} ORDER BY DESC(?height) LIMIT 1
TT: 
sort ( elevation_above_sea_level desc of @wd . mountain ( ) filter contains ( continent , " Q3960 " ^^wd:p_continent ) ) [ 1 ] ;

====
Utterance: Give me all cities in New Jersey with more than 10000 inhabitants.
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515> . 
    ?uri <http://www.wikidata.org/prop/direct/P131>+ <http://www.wikidata.org/entity/Q1408> . 
    ?uri <http://www.wikidata.org/prop/direct/P1082> ?population . 
    FILTER(?population > 10000) 
}
TT:
@wd . city ( ) filter contains ( located_in_the_administrative_territorial_entity , " Q1408 " ^^wd:p_located_in_the_administrative_territorial_entity ) && population >= 10000 ;

====
Utterance: Whose wife is called Mary?
SPARQL: 
SELECT DISTINCT ?uri { 
    ?uri <http://www.wikidata.org/prop/direct/P26> ?spouse .  
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  
    FILTER(regex(?name,'Mary')) 
}
TT: 
@wd . entity ( ) filter contains~ ( spouse , " mary " ) ;

====
Utterance: Was the wife of president Lincoln called Mary?
SPARQL: 
ASK WHERE { 
    <http://www.wikidata.org/entity/Q91> <http://www.wikidata.org/prop/direct/P26> ?spouse .  
    ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  
    FILTER(regex(?name,'Mary')) 
}
TT: 
[ contains~ ( spouse , " mary " ) ] of @wd . human ( ) filter id == " Q91 " ^^wd:human ;

====
Utterance: How many countries are there in Europe ? 
SPARQL: 
SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {
     ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q6256> . 
     ?uri <http://www.wikidata.org/prop/direct/P30> <http://www.wikidata.org/entity/Q46> . 
}
TT: 
count ( @wd . country ( ) filter contains ( continent , " Q46 " ^^wd:p_continent ) ) ;

====
Utterance: Which actors were born in Germany?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q10800557> . 
    { ?uri <http://www.wikidata.org/prop/direct/P19> <http://www.wikidata.org/entity/Q183> . } UNION 
    { ?uri <http://www.wikidata.org/prop/direct/P19>/<http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q183> . } 
}
TT: 
@wd . entity ( ) filter contains ( occupation , " Q10800557 " ^^wd:p_occupation ) && contains ( place_of_birth , " Q183 " ^^wd:p_place_of_birth ) ;

====
Utterance: Give me the birthdays of all actors of the television show Charmed.
SPARQL: 
SELECT DISTINCT ?date WHERE { 
    <http://www.wikidata.org/entity/Q162371> <http://www.wikidata.org/prop/direct/P161>/<http://www.wikidata.org/prop/direct/P569> ?date .
}
TT: 
[ < cast_member / date_of_birth > ] of @wd . television_series ( ) filter id == " Q162371 " ^^wd:television_series ;

====
Utterance: Does the Isar flow into a lake?
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q106588> <http://www.wikidata.org/prop/direct/P403> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q23397>  . 
}
TT:
[ contains ( mouth_of_the_watercourse , any ( [ id ] of @wd . lake ( ) ) ) ] of @wd . river ( ) filter id == " Q106588 " ^^wd:river ;

====
Utterance: Who wrote the lyrics for the Polish national anthem?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q36> <http://www.wikidata.org/prop/direct/P85>/<http://www.wikidata.org/prop/direct/P676> ?uri . 
}
TT:
[ < anthem / lyrics_by > ] of @wd . country ( ) filter id == " Q36 " ^^wd:country ;

====
Utterance: Which writers studied in Istanbul?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . 
    ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>  <http://www.wikidata.org/entity/Q406> . 
}
TT:
@wd . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , " Q406 " ^^wd:p_located_in_the_administrative_territorial_entity ) && contains ( occupation , " Q36180 " ^^wd:p_occupation ) ;

====
Utterance: Which writers studied in Istanbul?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q36180> . 
    ?uri <http://www.wikidata.org/prop/direct/P69>/<http://www.wikidata.org/prop/direct/P131>+  <http://www.wikidata.org/entity/Q406> . 
}
TT:
@wd . entity ( ) filter contains ( < educated_at / located_in_the_administrative_territorial_entity > , " Q406 " ^^wd:p_located_in_the_administrative_territorial_entity ) && contains ( occupation , " Q36180 " ^^wd:p_occupation ) ;

====
Utterance: In which city did John F. Kennedy die?
SPARQL:
SELECT DISTINCT ?uri WHERE {  
    <http://www.wikidata.org/entity/Q9696> <http://www.wikidata.org/prop/direct/P20>/<http://www.wikidata.org/prop/direct/P131> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q515>  .  
} 
TT: 
[ < place_of_death / located_in_the_administrative_territorial_entity > : Entity ( wd:city ) ] of @wd . human ( ) filter id == " Q9696 " ^^wd:human ;

====
Utterance: Which mountain is the highest after the Annapurna?
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q8502> . 
    ?uri <http://www.wikidata.org/prop/direct/P2044> ?elevation . 
    <http://www.wikidata.org/entity/Q16466024> <http://www.wikidata.org/prop/direct/P2044> ?elevation2 . 
    FILTER (?elevation < ?elevation2) . 
} ORDER BY DESC(?elevation) LIMIT 1
TT:
sort ( elevation_above_sea_level desc of @wd . mountain ( ) filter elevation_above_sea_level <= any ( [ elevation_above_sea_level ] of @wd . mountain ( ) filter id == " Q16466024 " ^^wd:mountain ) ) [ 1 ] ;

==== 
Utterance: Are tree frogs a type of amphibian?
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q53696> <http://www.wikidata.org/prop/direct/P171>* <http://www.wikidata.org/entity/Q10908> . 
}
TT:
[ contains ( < parent_taxon * > , " Q10908 " ^^wd:p_parent_taxon ) ] of @wd . taxon ( ) filter id == " Q53696 " ^^wd:taxon ;

====
Utterance: Which telecommunications organizations are located in Belgium?
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    { ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q43229> } UNION 
    { ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q43229> } . 
    ?uri <http://www.wikidata.org/prop/direct/P452> <http://www.wikidata.org/entity/Q418> .  
    ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q31> . 
}
TT: 
@wd . organization ( ) filter contains ( country , " Q31 " ^^wd:p_country ) && contains ( industry , " Q418 " ^^wd:p_industry ) ;

====
Utterance: Is there a video game called Battle Chess?
SPARQL: 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>  
ASK WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q7889> . 
    ?uri rdfs:label "Battle Chess"@en 
}
TT: 
[ count >= 1 ] of count ( @wd . video_game ( ) filter id =~ " battle chess " ) ;

====
Utterance: Give me the websites of companies with more than 500000 employees.
SPARQL:
SELECT DISTINCT ?string WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31>/(<http://www.wikidata.org/prop/direct/P279>*) <http://www.wikidata.org/entity/Q4830453> . 
    ?uri <http://www.wikidata.org/prop/direct/P1128> ?number . 
    FILTER(?number > 500000) . 
    ?uri <http://www.wikidata.org/prop/direct/P856> ?string . 
}
TT:
[ official_website ] of @wd . organization ( ) filter instance_of == " Q4830453 " ^^wd:organization_subdomain && employees >= 500000 ;

====
Utterance: Is Lake Baikal bigger than the Great Bear Lake?
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q5513> <http://www.wikidata.org/prop/direct/P2046> ?area1 . 
    <http://www.wikidata.org/entity/Q5525> <http://www.wikidata.org/prop/direct/P2046> ?area2 . 
    FILTER(?area1 > ?area2) 
}
TT: 
[ area >= any ( [ area ] of @wd . lake ( ) filter id == " Q5525 " ^^wd:lake ) ] of @wd . lake ( ) filter id == " Q5513 " ^^wd:lake ;

====
Utterance: Was U.S. president Jackson involved in a war?
SPARQL: 
ASK WHERE { 
    <http://www.wikidata.org/entity/Q11817> <http://www.wikidata.org/prop/direct/P607> ?uri . 
}
TT:
[ ! ( count ( conflict ) == 0 ) ] of @wd . human ( ) filter id == " Q11817 " ^^wd:human ;

====
Utterance: How many people live in the capital of Australia?
SPARQL: 
SELECT DISTINCT ?number WHERE { 
    <http://www.wikidata.org/entity/Q408> <http://www.wikidata.org/prop/direct/P36> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P1082> ?number . 
}
TT:
[ population ] of @wd . entity ( ) filter in_array ( id , any ( [ capital ] of @wd . country ( ) filter id == " Q408 " ^^wd:country ) ) ;

====
Utterance: Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?
SPARQL:
ASK WHERE { 
    <http://www.wikidata.org/entity/Q128160> <http://www.wikidata.org/prop/direct/P582> ?date1 . 
    <http://www.wikidata.org/entity/Q191721> <http://www.wikidata.org/prop/direct/P580> ?date2 . 
    FILTER(?date1 < ?date2) 
}
TT:
[ end_time <= any ( [ start_time ] of @wd . entity ( ) filter id == " Q191721 " ^^wd:entity ) ] of @wd . entity ( ) filter id == " Q128160 " ^^wd:entity ;

====
Utterance: Show me all basketball players that are higher than 2 meters .
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P106> <http://www.wikidata.org/entity/Q3665646> . 
    ?uri <http://www.wikidata.org/prop/direct/P2048> ?height .  
    FILTER(?height > 200)
}
TT: 
@wd . entity ( ) filter contains ( occupation , " Q3665646 " ^^wd:p_occupation ) && height >= 2 m ;

====
Utterance: in which u . s . state is mount mckinley located ?
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q130018> <http://www.wikidata.org/prop/direct/P131> ?uri
}
TT: 
[ located_in_the_administrative_territorial_entity ] of @wd . mountain ( ) filter id == " Q130018 " ^^wd:mountain ;

====
Utterance: which indian company has the most employees ?
SPARQL: 
SELECT DISTINCT ?uri WHERE { 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q4830453>  . 
    ?uri <http://www.wikidata.org/prop/direct/P17> <http://www.wikidata.org/entity/Q668> . 
    ?uri <http://www.wikidata.org/prop/direct/P1128> ?employees . 
} ORDER BY DESC(?employees) LIMIT 1
TT: 
sort ( employees desc of @wd . organization ( ) filter contains ( country , " Q668 " ^^wd:p_country ) && instance_of == " Q4830453 " ^^wd:organization_subdomain ) [ 1 ] ;

====
Utterance: how many children do US president have on average? 
SPARQL: 
SELECT (AVG(?x) as ?avg) WHERE {
    ?uri <http://www.wikidata.org/prop/direct/P39> <http://www.wikidata.org/entity/Q11696> . 
    ?uri <http://www.wikidata.org/prop/direct/P1971> ?x
}
TT:
avg ( number_of_children of @wd . entity ( ) filter contains ( position_held , " Q11696 " ^^wd:p_position_held ) ) ;

====
Utterance: show me protests started after 2000?
SPARQL:
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT DISTINCT ?uri WHERE {
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q273120> . 
    ?uri <http://www.wikidata.org/prop/direct/P580> ?date.
    FILTER(?date > "2000-01-01T00:00:00Z"^^xsd:dateTime)
}
TT: 
@wd . entity ( ) filter instance_of == " Q273120 " ^^wd:entity_subdomain && start_time >= new Date ( 2000 ) ;
====
Utterance: who are the US presidents since 2000? 
SPARQL: 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
SELECT DISTINCT ?uri WHERE {
    <http://www.wikidata.org/entity/Q30> <http://www.wikidata.org/prop/P6> ?p.
    ?p <http://www.wikidata.org/prop/statement/P6> ?uri.
    ?p <http://www.wikidata.org/prop/qualifier/P582> ?date.
    FILTER(?date > "2000-01-01T00:00:00Z"^^xsd:dateTime)
}
TT:
[ head_of_government filter end_time >= new Date ( 2000 ) ] of @wd . country ( ) filter id == " Q30 " ^^wd:country ;

====
Utterance: when did obama start to be the us president? 
SPARQL: 
SELECT DISTINCT ?date WHERE {
    <http://www.wikidata.org/entity/Q30> <http://www.wikidata.org/prop/P6> ?p.
    ?p <http://www.wikidata.org/prop/statement/P6> <http://www.wikidata.org/entity/Q76>.
    ?p <http://www.wikidata.org/prop/qualifier/P580> ?date.
}
TT:
[ start_time of ( head_of_government filter value == " Q76 " ^^wd:p_head_of_government ) ] of @wd . country ( ) filter id == " Q30 " ^^wd:country ;

====
Utterance: Which museum exhibits The Scream by Munch?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q471379> <http://www.wikidata.org/prop/direct/P527>/<http://www.wikidata.org/prop/direct/P276> ?uri . 
    ?uri <http://www.wikidata.org/prop/direct/P31> <http://www.wikidata.org/entity/Q207694>
}
TT: 
[ < has_parts / location > : Entity ( wd:art_museum ) ] of @wd . entity ( ) filter id == " Q471379 " ^^wd:entity ;

====
Utterance: What is the highest place of the Urals?
SPARQL:
SELECT DISTINCT ?uri WHERE { 
    <http://www.wikidata.org/entity/Q35600> <http://www.wikidata.org/prop/direct/P610> ?uri . 
}
TT:
[ highest_point ] of @wd . entity ( ) filter id == " Q35600 " ^^wd:entity ;