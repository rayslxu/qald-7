Utterance: who does sonny bill williams play for 2012 ?
SPARQL: 
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX p: <http://www.wikidata.org/prop/> 
PREFIX ps: <http://www.wikidata.org/prop/statement/> 
PREFIX pq: <http://www.wikidata.org/prop/qualifier/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
SELECT DISTINCT ?x WHERE { 
    wd:Q2481789 p:P54 ?p. 
    ?p ps:P54 ?x; 
       pq:P580 ?y; 
       pq:P582 ?z. 
    FILTER((?y < "2013-01-01T00:00:00Z"^^xsd:dateTime) && (?z >= "2012-01-01T00:00:00Z"^^xsd:dateTime)) 
}
TT: 
[ member_of_sports_team filter ( point_in_time == new Date ( 2012 ) ) ] of @wd . human ( ) filter id == " Q2481789 " ^^wd:human ;


====

Utterance: what books did beverly cleary right ?
SPARQL: 
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
SELECT DISTINCT ?x WHERE { 
    ?x wdt:P31/wdt:P279* wd:Q47461344; 
       wdt:P50 wd:Q1316719. 
}
TT: 
@wd . book ( ) filter contains ( author , " Q1316719 " ^^wd:p_author ) ;

====

Utterance: what character did natalie portman play in star wars ?	
SPARQL: 
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX p: <http://www.wikidata.org/prop/> 
PREFIX ps: <http://www.wikidata.org/prop/statement/> 
PREFIX pq: <http://www.wikidata.org/prop/qualifier/> 
SELECT DISTINCT ?x WHERE { 
    ?p wdt:P8345 wd:Q462; p:P161|p:P725 ?y. 
    ?y ps:P161|ps:P725 wd:Q37876; pq:P453 ?x. 
}
TT: 
[ character_role of ( cast_member filter value == " Q37876 " ^^wd:p_cast_member ) ] of @wd . entity ( ) filter contains ( media_franchise , " Q462 " ^^wd:p_media_franchise ) ;

====

Utterance: who is the president of the european union 2011 ?
SPARQL:
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX p: <http://www.wikidata.org/prop/> 
PREFIX ps: <http://www.wikidata.org/prop/statement/> 
PREFIX pq: <http://www.wikidata.org/prop/qualifier/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
SELECT DISTINCT ?x WHERE { 
    ?x p:P39 ?p. 
    ?p ps:P39 wd:Q740126; 
       pq:P580 ?y; 
       pq:P582 ?z. 
    FILTER((?y < "2012-01-01T00:00:00Z"^^xsd:dateTime) && (?z >= "2011-01-01T00:00:00Z"^^xsd:dateTime)) 
}
TT:
@wd . entity ( ) filter contains ( position_held filter ( point_in_time == new Date ( 2011 ) ) , " Q740126 " ^^wd:p_position_held ) ;

====

Utterance: where are the netherlands on a world map ?
SPARQL:
PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
SELECT DISTINCT ?x WHERE { wd:Q55 wdt:P625 ?x. }
TT:
[ location ] of @wd . entity ( ) filter id == " Q55 " ^^wd:entity ;

====
Utterance: what character did brian austin green play on 90210 ?
SPARQL:
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX p: <http://www.wikidata.org/prop/> 
PREFIX ps: <http://www.wikidata.org/prop/statement/> 
PREFIX pq: <http://www.wikidata.org/prop/qualifier/> 
SELECT DISTINCT ?x WHERE { 
    wd:Q117590 p:P161 ?p. 
    ?p ps:P161 wd:Q313311; pq:P453 ?x. 
}
TT: 
[ character_role of ( cast_member filter value == " Q313311 " ^^wd:p_cast_member ) ] of @wd . television_series ( ) filter id == " Q117590 " ^^wd:television_series ;

====

Utterance: what was the name of frederick douglass book ?
SPARQL:
PREFIX wd: <http://www.wikidata.org/entity/> PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
SELECT DISTINCT ?x WHERE { ?x wdt:P31/wdt:P279* wd:Q7725634; wdt:P50 wd:Q215562. }
TT:
@wd . creative_work ( ) filter contains ( author , " Q215562 " ^^wd:p_author ) && instance_of == " Q7725634 " ^^wd:creative_work_subdomain ;
