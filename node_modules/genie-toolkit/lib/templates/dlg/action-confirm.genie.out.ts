// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>

// Action result templates: used after executing the action
// Either the action was successful, and we're done, or
// the action failed, and we give the user an option to try again

import * as $runtime from "../../sentence-generator/runtime";
import type $SentenceGenerator from "../../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../../sentence-generator/types";
import * as $I18n from "../../i18n/index";
import * as D from '../dialogue_acts';
import * as S from '../state_manip';
import ThingpediaLoader from '../load-thingpedia';
export const action_confirm_phrase : $SentenceGeneratorTypes.NonTerminal<S.AgentReplyRecord> = "action_confirm_phrase";
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export async function $load($options : $SentenceGeneratorTypes.GrammarOptions, $locale : $I18n.LanguagePack, $grammar : $SentenceGenerator, $loader : ThingpediaLoader) : Promise<void> {
   $grammar.declareSymbol("action_confirm_phrase");
   $grammar.addRule("action_confirm_phrase", [new $runtime.NonTerminal("ctx_next_statement", "stmt", undefined)], $locale._("{ok , do you want me to ${stmt}?|ok, {i am going to|you want to|you would like to} ${stmt}. {do you confirm|is that it|is that correct|is that right}?}"), ((stmt : S.ContextInfo) : (S.AgentReplyRecord)|null => D.makeActionConfirmationPhrase(stmt)), undefined, {  });
};
