import { Replaceable } from '../utils/template-string';
import { EntityMap } from '../utils/entity-utils';
import EnglishTokenizer from './tokenizer/english';
import DefaultLanguagePack, { UnitPreferenceDelegate } from './default';
/**
 * Implementation of a language pack for English, primarily optimized for
 * American English.
 */
export default class EnglishLanguagePack extends DefaultLanguagePack {
    protected _tokenizer: EnglishTokenizer | undefined;
    constructor(locale: string);
    getTokenizer(): EnglishTokenizer;
    getDefaultTemperatureUnit(): string;
    protected _getPossibleUnits(baseUnit: string): string[];
    postprocessSynthetic(sentence: string, program: any, rng: (() => number) | null, forTarget?: string): string;
    preprocessFunctionCanonical(canonical: unknown, forItem: 'query' | 'action' | 'stream', forSide: 'user' | 'agent', isList: boolean): Replaceable[];
    protected displayPhoneNumber(phone: string): string;
    postprocessNLG(answer: string, entities: EntityMap, delegate: UnitPreferenceDelegate): string;
    detokenize(sentence: string, prevtoken: string | null, token: string): string;
    pluralize(name: string): string;
    /**
     * Turn a verb phrase into its past form
     * @param phrase
     * @returns {string|undefined}
     */
    toVerbPast(phrase: string): string | undefined;
    toAgentSideUtterance(phrase: string): string;
    /**
     * Turn a verb phrase into its base form
     * @param phrase
     * @returns {string|undefined}
     */
    toVerbBase(phrase: string): string | undefined;
    /**
     * Turn a verb phrase into its 3rd person singular present form
     * @param phrase
     * @returns {string|undefined}
     */
    toVerbSingular(phrase: string): string | undefined;
    isGoodWord(word: string): boolean;
    hasPunctuation(sentence: string): boolean;
    isGoodSentence(sentence: string): boolean;
    isGoodNumber(number: string): boolean;
    isGoodPersonName(word: string): boolean;
    addDefiniteArticle(phrase: string): string;
    posTag(tokens: string[]): string[];
}
