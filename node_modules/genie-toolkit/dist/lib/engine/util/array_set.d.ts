/**
 * A Set-like class that uses an Array as backing store, and thus can
 * be stored transparently to and from JSON.
 */
export default class ArraySet<S> {
    private store;
    constructor(store?: S[]);
    toJSON(): S[];
    get size(): number;
    add(elem: S): boolean;
    delete(elem: S): boolean;
    has(elem: S): boolean;
    clear(): void;
    forEach<T>(callback: (this: T, key: S, value: S, set: this) => void, thisArg: T): void;
    forEach(callback: (key: S, value: S, set: this) => void): void;
    values(): Iterable<S>;
    keys(): Iterable<S>;
    [Symbol.iterator](): Iterator<S>;
}
