import * as Tp from 'thingpedia';
import { AbstractDatabase } from '../db';
export declare class ChannelState {
    private _store;
    private _uniqueId;
    private _cached;
    constructor(db: AbstractDatabase, uniqueId: string);
    read(): Promise<any>;
    write(value: unknown): Promise<unknown>;
}
export declare class ChannelStateBinder extends Tp.Helpers.RefCounted {
    readonly uniqueId: string;
    private _state;
    private _cached;
    private _updateTimeout;
    constructor(db: AbstractDatabase, uniqueId: string);
    get(name: string): unknown;
    set(name: string, value: unknown): void;
    durableSet(name: string, value: unknown): Promise<void>;
    changed(): void;
    flushToDisk(): Promise<void>;
    protected _doOpen(): Promise<void>;
    protected _doClose(): Promise<void>;
}
