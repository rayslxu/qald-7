import * as Tp from 'thingpedia';
interface ThingEngineDeviceState {
    kind: string;
    tier: Tp.Tier;
    identity?: string;
    cloudId?: string | null;
    developerKey?: string | null;
    [key: string]: unknown;
}
export default class ThingEngineDevice extends Tp.BaseDevice {
    tier: Tp.Tier;
    identity: string;
    address: string;
    own: true;
    cloudId: string | undefined;
    developerKey: string | null | undefined;
    host: string | undefined;
    port: number | undefined;
    private _syncManager;
    constructor(engine: Tp.BaseEngine, state: ThingEngineDeviceState);
    updateState(state: ThingEngineDeviceState): void;
    private _checkCloudIdDevKey;
    get ownerTier(): Tp.Tier;
    checkAvailable(): Promise<Tp.Availability.AVAILABLE | Tp.Availability.OWNER_UNAVAILABLE>;
}
export {};
