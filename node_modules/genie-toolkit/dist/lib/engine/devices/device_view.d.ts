import * as Tp from 'thingpedia';
import { ObjectSet } from 'thingpedia';
export default class DeviceView extends ObjectSet.Base<Tp.BaseDevice> {
    private context;
    private kind;
    private attrs;
    private _deviceAddedListener;
    private _deviceRemovedListener;
    private _objects;
    private _subviews;
    private _dynamic;
    constructor(context: ObjectSet.Base<Tp.BaseDevice>, kind: string, attrs: Record<string, string>, dynamic?: boolean);
    values(): Tp.BaseDevice[];
    addOne(o: Tp.BaseDevice | null): void;
    addMany(objs: Tp.BaseDevice[]): void;
    removeOne(o: Tp.BaseDevice): void;
    getById(id: string): Tp.BaseDevice | undefined;
    private _matchSelector;
    private _maybeAddSubview;
    private _maybeRemoveSubview;
    private _onDeviceAdded;
    private _onDeviceRemoved;
    private _startSubview;
    private _stopSubview;
    start(): Promise<void>;
    stop(): Promise<void>;
}
