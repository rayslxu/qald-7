export interface RawPredictionCandidate {
    answer: string;
    score: Record<string, number>;
}
export default class Predictor {
    private _modelurl;
    private _worker;
    private _stopped;
    private _minibatchSize;
    private _maxLatency;
    private _minibatchTask;
    private _minibatch;
    private _minibatchStartTime;
    constructor(modelurl: string, { minibatchSize, maxLatency }: {
        minibatchSize?: number | undefined;
        maxLatency?: number | undefined;
    });
    private _flushRequest;
    private _startRequest;
    private _addRequest;
    predict(context: string, question?: string, answer?: string, task?: string, example_id?: string): Promise<RawPredictionCandidate[]>;
    start(): void;
    stop(): void;
    reload(): void;
}
