"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2019-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BTrie = exports.StreamUtils = exports.ThingTalkUtils = exports.IpAddressUtils = exports.EntityUtils = exports.parallelize = exports.genBaseCanonical = exports.EngineModules = exports.AssistantEngine = exports.SpeechHandler = exports.DialogueAgent = exports.ExactMatcher = exports.ParserClient = exports.Evaluation = exports.Training = exports.MTurk = exports.I18n = exports.DialogueSerializer = exports.DialogueParser = exports.DatasetSplitter = exports.DatasetAugmenter = exports.DatasetStringifier = exports.DatasetParser = exports.ThingpediaLoader = exports.TransactionPolicy = exports.CommonTemplates = exports.SentenceGeneratorTypes = exports.SentenceGeneratorRuntime = exports.SentenceGenerator = exports.DialogueGenerator = exports.BasicSentenceGenerator = void 0;
const batch_1 = require("./sentence-generator/batch");
Object.defineProperty(exports, "BasicSentenceGenerator", { enumerable: true, get: function () { return batch_1.BasicSentenceGenerator; } });
Object.defineProperty(exports, "DialogueGenerator", { enumerable: true, get: function () { return batch_1.DialogueGenerator; } });
const augmentation_1 = __importDefault(require("./dataset-tools/augmentation"));
exports.DatasetAugmenter = augmentation_1.default;
const parsers_1 = require("./dataset-tools/parsers");
Object.defineProperty(exports, "DatasetParser", { enumerable: true, get: function () { return parsers_1.DatasetParser; } });
Object.defineProperty(exports, "DatasetStringifier", { enumerable: true, get: function () { return parsers_1.DatasetStringifier; } });
Object.defineProperty(exports, "DialogueParser", { enumerable: true, get: function () { return parsers_1.DialogueParser; } });
Object.defineProperty(exports, "DialogueSerializer", { enumerable: true, get: function () { return parsers_1.DialogueSerializer; } });
const splitter_1 = __importDefault(require("./dataset-tools/splitter"));
exports.DatasetSplitter = splitter_1.default;
const MTurk = __importStar(require("./dataset-tools/mturk"));
exports.MTurk = MTurk;
const Training = __importStar(require("./training"));
exports.Training = Training;
const Evaluation = __importStar(require("./dataset-tools/evaluation"));
exports.Evaluation = Evaluation;
const ParserClient = __importStar(require("./prediction/parserclient"));
exports.ParserClient = ParserClient;
const exact_1 = __importDefault(require("./prediction/exact"));
exports.ExactMatcher = exact_1.default;
const I18n = __importStar(require("./i18n"));
exports.I18n = I18n;
const parallelize_1 = __importDefault(require("./utils/parallelize"));
exports.parallelize = parallelize_1.default;
const EntityUtils = __importStar(require("./utils/entity-utils"));
exports.EntityUtils = EntityUtils;
const IpAddressUtils = __importStar(require("./engine/util/ip_address"));
exports.IpAddressUtils = IpAddressUtils;
const ThingTalkUtils = __importStar(require("./utils/thingtalk"));
exports.ThingTalkUtils = ThingTalkUtils;
const StreamUtils = __importStar(require("./utils/stream-utils"));
exports.StreamUtils = StreamUtils;
const BTrie = __importStar(require("./utils/btrie"));
exports.BTrie = BTrie;
const speech_handler_1 = __importDefault(require("./speech/speech_handler"));
exports.SpeechHandler = speech_handler_1.default;
const engine_1 = __importDefault(require("./engine"));
exports.AssistantEngine = engine_1.default;
const EngineModules = __importStar(require("./engine"));
exports.EngineModules = EngineModules;
const DialogueAgent = __importStar(require("./dialogue-agent"));
exports.DialogueAgent = DialogueAgent;
const generator_1 = __importDefault(require("./sentence-generator/generator"));
exports.SentenceGenerator = generator_1.default;
const SentenceGeneratorRuntime = __importStar(require("./sentence-generator/runtime"));
exports.SentenceGeneratorRuntime = SentenceGeneratorRuntime;
const SentenceGeneratorTypes = __importStar(require("./sentence-generator/types"));
exports.SentenceGeneratorTypes = SentenceGeneratorTypes;
const CommonTemplates = __importStar(require("./templates/common.genie.out"));
exports.CommonTemplates = CommonTemplates;
const TransactionPolicy = __importStar(require("./templates/transactions"));
exports.TransactionPolicy = TransactionPolicy;
const load_thingpedia_1 = __importDefault(require("./templates/load-thingpedia"));
exports.ThingpediaLoader = load_thingpedia_1.default;
const base_canonical_generator_1 = __importDefault(require("../tool/autoqa/lib/base-canonical-generator"));
exports.genBaseCanonical = base_canonical_generator_1.default;
//# sourceMappingURL=index.js.map