"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2018-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const nodemailer = __importStar(require("nodemailer"));
const string_interp_1 = __importDefault(require("string-interp"));
function htmlEscape(x) {
    if (!x)
        return '';
    return x.replace(/'"&<>/g, (char) => {
        switch (char) {
            case "'":
                return '&apos';
            case '"':
                return '&quot;';
            case '&':
                return '&amp;';
            case '<':
                return '&lt;';
            case '>':
                return '&gt;';
            default:
                return char;
        }
    });
}
class EmailNotificationBackend {
    constructor(engine, config) {
        this.name = 'E-mail';
        this.uniqueId = 'email';
        this._platform = engine.platform;
        this._client = nodemailer.createTransport(config);
        this._from = config.from;
        this._unsubURL = config.unsubscribeURL;
    }
    get requiredSettings() {
        return { to: '$context.self.email_address' };
    }
    async notify(data, config) {
        let to;
        if (config) {
            to = config.to;
        }
        else {
            const profile = this._platform.getProfile();
            if (!profile.email || !profile.email_verified)
                return;
            to = profile.email;
        }
        const unsubscribeURL = (0, string_interp_1.default)(this._unsubURL, {
            email: new Buffer(to).toString('base64')
        }, {
            locale: this._platform.locale,
            timezone: this._platform.timezone
        });
        let text = data.formatted.map((x) => x.toLocaleString(this._platform.locale)).join('\n');
        text += `
----
You are receiving this email because you subscribed to notifications
from Genie. To stop, open the following link:
${unsubscribeURL}
`;
        let html = data.formatted.map((x) => {
            if (x.type === 'text')
                return `<p>${htmlEscape(x.text)}</p>`;
            if (x.type === 'picture')
                return `<img style="display:block;max-width:80%;max-height:400px;" src="${htmlEscape(x.url)}" alt="${htmlEscape(x.alt)}" />`;
            if (x.type === 'rdl') {
                return `<h4><a href="${htmlEscape(x.webCallback)}">${htmlEscape(x.displayTitle)}</a></h4>`
                    + (x.displayText ? `<p>${htmlEscape(x.displayText)}</p>` : '');
            }
            return `<p>${htmlEscape(x.toLocaleString(this._platform.locale))}</p>`;
        }).join('\n');
        html += `
<hr/>
<p>You are receiving this email because you subscribed to notifications
from Genie. To stop, you can <a href="${htmlEscape(unsubscribeURL)}">unsubscribe</a>.</p>`;
        await this._client.sendMail({
            to, from: this._from,
            subject: "Notification from Genie",
            text, html
        });
    }
    async notifyError(data) {
        // do nothing, and swallow the error...
    }
}
exports.default = EmailNotificationBackend;
//# sourceMappingURL=email.js.map