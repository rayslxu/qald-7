import * as Tp from 'thingpedia';
import type Engine from '../../engine';
interface EmailConfig {
    service: string;
    from: string;
    auth: {
        user: string;
        pass: string;
    };
    unsubscribeURL: string;
}
export default class EmailNotificationBackend implements Tp.Capabilities.NotificationBackend {
    private _platform;
    private _client;
    private _from;
    private _unsubURL;
    name: string;
    uniqueId: string;
    constructor(engine: Engine, config: EmailConfig);
    get requiredSettings(): {
        to: string;
    };
    notify(data: {
        appId: string;
        icon: string | null;
        raw: Record<string, unknown>;
        type: string;
        formatted: Tp.FormatObjects.FormattedObject[];
    }, config?: Record<string, string>): Promise<void>;
    notifyError(data: {
        appId: string;
        icon: string | null;
        error: Error;
    }): Promise<void>;
}
export {};
