import { PlatformData } from './platform_data';
export { PlatformData };
import { MessageType } from './message_type';
export { MessageType };
export { default as WebSocketConnection } from './connection';
export * from './chat_message';
export * from './control_message';
import * as Audio from '../audio/protocol';
export { Audio };
import { Message } from './chat_message';
import { ConversationIDMessage, PingMessage, HypothesisMessage, NewDeviceMessage, AskSpecialMessage, ErrorMessage, ClientRequestSubprotocolCommand } from './control_message';
/**
 * A single JSON object sent from the server to client.
 */
export declare type ServerProtocolMessage = Message | ConversationIDMessage | PingMessage | HypothesisMessage | NewDeviceMessage | AskSpecialMessage | ErrorMessage | Audio.ServerMessage;
export interface ClientTextCommand {
    type: MessageType.COMMAND;
    text: string;
    platformData?: PlatformData;
}
export interface ClientParsedCommand {
    type: MessageType.PARSED_COMMAND;
    json: any;
    title?: string;
    platformData?: PlatformData;
}
export interface ClientThingTalkCommand {
    type: MessageType.THINGTALK_COMMAND;
    code: string;
    platformData?: PlatformData;
}
/**
 * A single JSON object sent from the client to the server.
 */
export declare type ClientProtocolMessage = PingMessage | ClientTextCommand | ClientParsedCommand | ClientThingTalkCommand | ClientRequestSubprotocolCommand | Audio.ClientMessage;
