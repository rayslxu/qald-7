"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020-2021 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubprotocolType = exports.MessageType = void 0;
var MessageType;
(function (MessageType) {
    // from user
    MessageType["COMMAND"] = "command";
    MessageType["PARSED_COMMAND"] = "parsed";
    MessageType["THINGTALK_COMMAND"] = "tt";
    // from agent
    MessageType["TEXT"] = "text";
    MessageType["PICTURE"] = "picture";
    MessageType["CHOICE"] = "choice";
    MessageType["LINK"] = "link";
    MessageType["BUTTON"] = "button";
    MessageType["RDL"] = "rdl";
    MessageType["SOUND_EFFECT"] = "sound";
    MessageType["AUDIO"] = "audio";
    MessageType["VIDEO"] = "video";
    MessageType["NEW_PROGRAM"] = "new-program";
    // control messages
    MessageType["ID"] = "id";
    MessageType["PING"] = "ping";
    MessageType["NEW_DEVICE"] = "new-device";
    MessageType["HYPOTHESIS"] = "hypothesis";
    MessageType["ASK_SPECIAL"] = "askSpecial";
    MessageType["ERROR"] = "error";
    MessageType["REQUEST_SUBPROTOCOL"] = "req-subproto";
    // subprotocol identifiers
    MessageType["AUDIO_SUBPROTOCOL"] = "protocol:audio";
})(MessageType = exports.MessageType || (exports.MessageType = {}));
/**
 * Extension protocols
 *
 * These allows various components in Genie
 * to piggy-back into the conversation websocket,
 * avoiding a different connection to the server.
 */
var SubprotocolType;
(function (SubprotocolType) {
    SubprotocolType["AUDIO"] = "audio";
})(SubprotocolType = exports.SubprotocolType || (exports.SubprotocolType = {}));
//# sourceMappingURL=message_type.js.map