import * as Tp from 'thingpedia';
import { UserInput } from "../user-input";
import { DialogueHandler, CommandAnalysisType, ReplyResult, DialogueLoop } from "../dialogue-loop";
interface FAQCommandAnalysisType {
    type: CommandAnalysisType;
    utterance: string;
    user_target: string;
    answer: string;
}
export interface FAQModel {
    url: string;
    highConfidence?: number;
    lowConfidence?: number;
}
export default class FAQDialogueHandler implements DialogueHandler<FAQCommandAnalysisType, undefined> {
    priority: Tp.DialogueHandler.Priority;
    icon: null;
    uniqueId: string;
    private _loop;
    private _url;
    private _highConfidence;
    private _lowConfidence;
    private _looksLikeQuestion;
    constructor(loop: DialogueLoop, uniqueId: string, model: FAQModel, options: {
        locale: string;
    });
    initialize(): Promise<ReplyResult | null>;
    getState(): undefined;
    reset(): void;
    analyzeCommand(command: UserInput): Promise<FAQCommandAnalysisType>;
    getReply(command: FAQCommandAnalysisType): Promise<ReplyResult>;
    getFollowUp(): Promise<ReplyResult | null>;
}
export {};
