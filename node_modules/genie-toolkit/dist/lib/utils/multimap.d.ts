export default class MultiMap<K, V> {
    private _storage;
    private _size;
    constructor(elements?: Iterable<[K, V]>);
    keys(): Iterable<K>;
    values(): Iterable<V>;
    [Symbol.iterator](): Generator<[K, V], void>;
    entries(): Iterable<[K, V]>;
    get size(): number;
    clear(): void;
    delete(key: K): void;
    forEach<T>(callback: (this: T, value: V, key: K, map: this) => void, thisArg: T): void;
    get(key: K): readonly V[];
    has(key: K): boolean;
    put(key: K, value: V): number;
}
