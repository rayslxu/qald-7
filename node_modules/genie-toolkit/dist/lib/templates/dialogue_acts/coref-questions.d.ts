import { Ast } from 'thingtalk';
import * as C from '../ast_manip';
import { ContextInfo } from '../state_manip';
export declare type UserSearchQuestionForList = [Ast.EntityValue | Ast.NumberValue | null, C.ParamSlot[]];
export declare function userSearchQuestionForListKeyFn([name, questions]: UserSearchQuestionForList): {
    idType: null;
    functionName: null;
} | {
    idType: import("thingtalk/dist/type").default | null;
    functionName: string;
};
declare function recommendationSearchQuestionReply(ctx: ContextInfo, questions: C.ParamSlot[]): Ast.DialogueState | null;
declare function learnMoreSearchQuestionReply(ctx: ContextInfo, questions: C.ParamSlot[]): Ast.DialogueState | null;
declare function displayResultSearchQuestionReply(ctx: ContextInfo, questions: C.ParamSlot[]): Ast.DialogueState | null;
declare function listProposalSearchQuestionReply(ctx: ContextInfo, [name, questions]: [Ast.Value | null, C.ParamSlot[]]): Ast.DialogueState | null;
declare function corefConstant(ctx: ContextInfo, base: Ast.Expression, param: C.ParamSlot): Ast.Value | null;
declare function booleanQuestion(base: Ast.Expression | null, slot: C.FilterSlot): C.ParamSlot[] | null;
export { recommendationSearchQuestionReply, displayResultSearchQuestionReply, learnMoreSearchQuestionReply, listProposalSearchQuestionReply, corefConstant, booleanQuestion };
