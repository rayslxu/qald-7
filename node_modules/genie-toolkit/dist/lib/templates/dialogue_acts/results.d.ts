import { Ast, Type } from 'thingtalk';
import * as C from '../ast_manip';
import { ContextInfo } from '../state_manip';
import { SlotBag } from '../slot_bag';
export interface ResultPhrase {
    ctx: ContextInfo;
    info: SlotBag;
    compatible: number[];
}
export declare function resultPhraseKeyFn(phrase: ResultPhrase): {
    functionName: string;
};
export declare function mergeResultPhrase(p1: ResultPhrase, p2: ResultPhrase): ResultPhrase | null;
export declare function makeResultPhrase(ctx: ContextInfo, info: SlotBag): ResultPhrase | null;
export declare function addSlotToBag(bag: SlotBag, filter: C.FilterSlot): [SlotBag, string[]] | null;
export declare function addSlotToResultPhrase(phrase: ResultPhrase, filter: C.FilterSlot): ResultPhrase | null;
export interface DirectAnswerPhrase {
    result: ResultPhrase;
    name: Ast.Value;
    index: number;
}
export declare function directAnswerPhraseKeyFn(phrase: DirectAnswerPhrase): {
    index: number;
    type: Type;
};
export declare function checkDirectAnswerPhrase(res: ResultPhrase, name: Ast.Value): DirectAnswerPhrase | null;
export declare function makeFilterStyleDirectAnswerPhrase(ctx: ContextInfo, name: Ast.Value, filter: C.FilterSlot): DirectAnswerPhrase | null;
