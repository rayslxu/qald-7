"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.relatedQuestion = void 0;
const assert_1 = __importDefault(require("assert"));
const thingtalk_1 = require("thingtalk");
const C = __importStar(require("../ast_manip"));
const state_manip_1 = require("../state_manip");
const refinement_helpers_1 = require("./refinement-helpers");
function relatedQuestion(ctx, expr) {
    const currentStmt = ctx.current.stmt;
    const currentTable = currentStmt.expression;
    if (expr.schema.functionType !== 'query')
        return null;
    const newSchema = expr.schema;
    if (C.isSameFunction(currentTable.schema, newSchema))
        return null;
    const currentSchema = currentTable.schema;
    (0, assert_1.default)(currentSchema instanceof thingtalk_1.Ast.FunctionDef);
    const functionName = newSchema.qualifiedName;
    const related = currentSchema.getAnnotation('related');
    if (!related || !related.includes(functionName))
        return null;
    if (!C.checkValidQuery(expr))
        return null;
    const newTable = C.toChainExpression(expr.clone());
    const newFilterTable = (0, refinement_helpers_1.findOrMakeFilterExpression)(newTable);
    if (newFilterTable === null)
        return null;
    if (!(newFilterTable.expression instanceof thingtalk_1.Ast.InvocationExpression))
        return null;
    const ctxFilterTable = C.findFilterExpression(currentTable);
    if (ctxFilterTable) {
        const newFilter = (0, refinement_helpers_1.refineFilterToAnswerQuestion)(ctxFilterTable.filter, newFilterTable.filter);
        if (newFilter === null)
            return null;
        newFilterTable.filter = newFilter;
    }
    return (0, state_manip_1.addQuery)(ctx, 'execute', newTable, 'accepted');
}
exports.relatedQuestion = relatedQuestion;
//# sourceMappingURL=related-questions.js.map