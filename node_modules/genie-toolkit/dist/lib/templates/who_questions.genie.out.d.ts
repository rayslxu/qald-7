import type $SentenceGenerator from "../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../sentence-generator/types";
import * as $I18n from "../i18n/index";
import { Ast } from 'thingtalk';
import ThingpediaLoader from './load-thingpedia';
export declare const who_complete_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_with_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_with_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_which_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_clean_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_with_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_which_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_clean_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_verb_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_be_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_have_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_one_verb_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_be_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_have_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const who_two_verb_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const whose_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
