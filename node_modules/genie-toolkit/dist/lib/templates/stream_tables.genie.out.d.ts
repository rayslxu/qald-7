import type $SentenceGenerator from "../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../sentence-generator/types";
import * as $I18n from "../i18n/index";
import { Ast } from 'thingtalk';
import * as C from './ast_manip';
import ThingpediaLoader from './load-thingpedia';
export declare const complete_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const complete_get_command: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const if_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_if_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_if_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const with_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const answer_noun_phrase: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_with_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_which_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_clean_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_with_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_which_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_clean_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const three_with_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const three_which_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const three_clean_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const anything_phrase: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const anything_with_filter_phrase: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const anything_which_filter_phrase: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const anything_clean_filter_phrase: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const verb_filtered_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_be_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_have_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const one_verb_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_be_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_have_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const two_verb_filter_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const generic_argminmax: $SentenceGeneratorTypes.NonTerminal<C.ArgMinMax>;
export declare const with_arg_min_max_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const have_arg_min_max_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const edge_stream: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const stream: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const with_filtered_table_join: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const have_filtered_table_join: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
