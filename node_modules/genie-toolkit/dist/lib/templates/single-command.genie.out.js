"use strict";
// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2019-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.forward_get_do_command = exports.whose_filtered_table = exports.who_two_verb_filter_table = exports.who_two_have_filter_table = exports.who_two_be_filter_table = exports.who_one_verb_filter_table = exports.who_one_have_filter_table = exports.who_one_be_filter_table = exports.who_verb_filtered_table = exports.who_two_clean_filter_table = exports.who_two_which_filter_table = exports.who_two_with_filter_table = exports.who_one_clean_filter_table = exports.who_one_which_filter_table = exports.who_one_with_filter_table = exports.who_with_filtered_table = exports.who_complete_table = exports.compute_question = exports.projection_Measure_m = exports.projection_Number = exports.verb_projection_Any = exports.boolean_projection = exports.where_question = exports.pair_projection = exports.the_out_param_triple = exports.the_out_param_pair = exports.pvp_id_soft_filter = exports.npp_id_soft_filter = exports.within_filter = exports.quality_filter = exports.whose_npp_filter = exports.nearby_filter = exports.range_with_filter = exports.with_filter = exports.range_filter = exports.range = exports.either_filter = exports.edge_filter = exports.if_filter = exports.get_predicate_filter = exports.timer = exports.constant_String_ContextRef = exports.constant_nor_pairs = exports.constant_or_pairs = exports.constant_pairs = exports.unit_Measure_ms = exports.constant_day_of_week = exports.constant_date_range = exports.constant_date_point = exports.at_time = void 0;
exports.edge_stream = exports.have_arg_min_max_table = exports.generic_argminmax = exports.two_verb_filter_table = exports.two_have_filter_table = exports.two_be_filter_table = exports.one_verb_filter_table = exports.one_have_filter_table = exports.one_be_filter_table = exports.verb_filtered_table = exports.anything_clean_filter_phrase = exports.anything_which_filter_phrase = exports.anything_with_filter_phrase = exports.anything_phrase = exports.three_clean_filter_table = exports.three_which_filter_table = exports.three_with_filter_table = exports.two_clean_filter_table = exports.two_which_filter_table = exports.two_with_filter_table = exports.one_clean_filter_table = exports.one_which_filter_table = exports.one_with_filter_table = exports.answer_noun_phrase = exports.two_if_filter_table = exports.one_if_filter_table = exports.if_filtered_table = exports.complete_get_command = exports.complete_table = exports.say_command = exports.complete_action = exports.monitor_command = exports.when_command = exports.explicit_when_condition = exports.projection_question = exports.complete_question = exports.search_command = exports.generic_article = exports.generic_lookup_preamble = exports.generic_search_preamble = exports.imperative_verb_for_search = exports.generic_verb_for_search = exports.generic_preamble_for_action = exports.generic_preamble_for_answer = exports.timer_rule = exports.when_get_do_rule = exports.when_get_stream = exports.backward_when_do_rule = exports.forward_when_do_rule = exports.backward_get_do_command = void 0;
exports.$load = exports.$root = exports.boolean_question = exports.generic_join_table = exports.self_join_table = exports.out_param_symmetric = exports.short_phrase_table = exports.have_filtered_table_join = exports.with_filtered_table_join = exports.stream = void 0;
const $runtime = __importStar(require("../sentence-generator/runtime"));
const C = __importStar(require("./ast_manip"));
const shared_genie_out_1 = require("./shared.genie.out");
const constants_genie_out_1 = require("./constants.genie.out");
Object.defineProperty(exports, "at_time", { enumerable: true, get: function () { return constants_genie_out_1.at_time; } });
Object.defineProperty(exports, "constant_date_point", { enumerable: true, get: function () { return constants_genie_out_1.constant_date_point; } });
Object.defineProperty(exports, "constant_date_range", { enumerable: true, get: function () { return constants_genie_out_1.constant_date_range; } });
Object.defineProperty(exports, "constant_day_of_week", { enumerable: true, get: function () { return constants_genie_out_1.constant_day_of_week; } });
Object.defineProperty(exports, "unit_Measure_ms", { enumerable: true, get: function () { return constants_genie_out_1.unit_Measure_ms; } });
Object.defineProperty(exports, "constant_pairs", { enumerable: true, get: function () { return constants_genie_out_1.constant_pairs; } });
Object.defineProperty(exports, "constant_or_pairs", { enumerable: true, get: function () { return constants_genie_out_1.constant_or_pairs; } });
Object.defineProperty(exports, "constant_nor_pairs", { enumerable: true, get: function () { return constants_genie_out_1.constant_nor_pairs; } });
Object.defineProperty(exports, "constant_String_ContextRef", { enumerable: true, get: function () { return constants_genie_out_1.constant_String_ContextRef; } });
const timers_genie_out_1 = require("./timers.genie.out");
Object.defineProperty(exports, "timer", { enumerable: true, get: function () { return timers_genie_out_1.timer; } });
const filters_genie_out_1 = require("./filters.genie.out");
Object.defineProperty(exports, "get_predicate_filter", { enumerable: true, get: function () { return filters_genie_out_1.get_predicate_filter; } });
Object.defineProperty(exports, "if_filter", { enumerable: true, get: function () { return filters_genie_out_1.if_filter; } });
Object.defineProperty(exports, "edge_filter", { enumerable: true, get: function () { return filters_genie_out_1.edge_filter; } });
Object.defineProperty(exports, "either_filter", { enumerable: true, get: function () { return filters_genie_out_1.either_filter; } });
Object.defineProperty(exports, "range", { enumerable: true, get: function () { return filters_genie_out_1.range; } });
Object.defineProperty(exports, "range_filter", { enumerable: true, get: function () { return filters_genie_out_1.range_filter; } });
Object.defineProperty(exports, "with_filter", { enumerable: true, get: function () { return filters_genie_out_1.with_filter; } });
Object.defineProperty(exports, "range_with_filter", { enumerable: true, get: function () { return filters_genie_out_1.range_with_filter; } });
Object.defineProperty(exports, "nearby_filter", { enumerable: true, get: function () { return filters_genie_out_1.nearby_filter; } });
Object.defineProperty(exports, "whose_npp_filter", { enumerable: true, get: function () { return filters_genie_out_1.whose_npp_filter; } });
Object.defineProperty(exports, "quality_filter", { enumerable: true, get: function () { return filters_genie_out_1.quality_filter; } });
Object.defineProperty(exports, "within_filter", { enumerable: true, get: function () { return filters_genie_out_1.within_filter; } });
Object.defineProperty(exports, "npp_id_soft_filter", { enumerable: true, get: function () { return filters_genie_out_1.npp_id_soft_filter; } });
Object.defineProperty(exports, "pvp_id_soft_filter", { enumerable: true, get: function () { return filters_genie_out_1.pvp_id_soft_filter; } });
const projections_genie_out_1 = require("./projections.genie.out");
Object.defineProperty(exports, "the_out_param_pair", { enumerable: true, get: function () { return projections_genie_out_1.the_out_param_pair; } });
Object.defineProperty(exports, "the_out_param_triple", { enumerable: true, get: function () { return projections_genie_out_1.the_out_param_triple; } });
Object.defineProperty(exports, "pair_projection", { enumerable: true, get: function () { return projections_genie_out_1.pair_projection; } });
Object.defineProperty(exports, "where_question", { enumerable: true, get: function () { return projections_genie_out_1.where_question; } });
Object.defineProperty(exports, "boolean_projection", { enumerable: true, get: function () { return projections_genie_out_1.boolean_projection; } });
Object.defineProperty(exports, "verb_projection_Any", { enumerable: true, get: function () { return projections_genie_out_1.verb_projection_Any; } });
const aggregation_genie_out_1 = require("./aggregation.genie.out");
Object.defineProperty(exports, "projection_Number", { enumerable: true, get: function () { return aggregation_genie_out_1.projection_Number; } });
const computation_genie_out_1 = require("./computation.genie.out");
Object.defineProperty(exports, "projection_Measure_m", { enumerable: true, get: function () { return computation_genie_out_1.projection_Measure_m; } });
Object.defineProperty(exports, "compute_question", { enumerable: true, get: function () { return computation_genie_out_1.compute_question; } });
const who_questions_genie_out_1 = require("./who_questions.genie.out");
Object.defineProperty(exports, "who_complete_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_complete_table; } });
Object.defineProperty(exports, "who_with_filtered_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_with_filtered_table; } });
Object.defineProperty(exports, "who_one_with_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_with_filter_table; } });
Object.defineProperty(exports, "who_one_which_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_which_filter_table; } });
Object.defineProperty(exports, "who_one_clean_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_clean_filter_table; } });
Object.defineProperty(exports, "who_two_with_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_with_filter_table; } });
Object.defineProperty(exports, "who_two_which_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_which_filter_table; } });
Object.defineProperty(exports, "who_two_clean_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_clean_filter_table; } });
Object.defineProperty(exports, "who_verb_filtered_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_verb_filtered_table; } });
Object.defineProperty(exports, "who_one_be_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_be_filter_table; } });
Object.defineProperty(exports, "who_one_have_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_have_filter_table; } });
Object.defineProperty(exports, "who_one_verb_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_one_verb_filter_table; } });
Object.defineProperty(exports, "who_two_be_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_be_filter_table; } });
Object.defineProperty(exports, "who_two_have_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_have_filter_table; } });
Object.defineProperty(exports, "who_two_verb_filter_table", { enumerable: true, get: function () { return who_questions_genie_out_1.who_two_verb_filter_table; } });
Object.defineProperty(exports, "whose_filtered_table", { enumerable: true, get: function () { return who_questions_genie_out_1.whose_filtered_table; } });
const commands_genie_out_1 = require("./commands.genie.out");
Object.defineProperty(exports, "forward_get_do_command", { enumerable: true, get: function () { return commands_genie_out_1.forward_get_do_command; } });
Object.defineProperty(exports, "backward_get_do_command", { enumerable: true, get: function () { return commands_genie_out_1.backward_get_do_command; } });
Object.defineProperty(exports, "forward_when_do_rule", { enumerable: true, get: function () { return commands_genie_out_1.forward_when_do_rule; } });
Object.defineProperty(exports, "backward_when_do_rule", { enumerable: true, get: function () { return commands_genie_out_1.backward_when_do_rule; } });
Object.defineProperty(exports, "when_get_stream", { enumerable: true, get: function () { return commands_genie_out_1.when_get_stream; } });
Object.defineProperty(exports, "when_get_do_rule", { enumerable: true, get: function () { return commands_genie_out_1.when_get_do_rule; } });
Object.defineProperty(exports, "timer_rule", { enumerable: true, get: function () { return commands_genie_out_1.timer_rule; } });
Object.defineProperty(exports, "generic_preamble_for_answer", { enumerable: true, get: function () { return commands_genie_out_1.generic_preamble_for_answer; } });
Object.defineProperty(exports, "generic_preamble_for_action", { enumerable: true, get: function () { return commands_genie_out_1.generic_preamble_for_action; } });
Object.defineProperty(exports, "generic_verb_for_search", { enumerable: true, get: function () { return commands_genie_out_1.generic_verb_for_search; } });
Object.defineProperty(exports, "imperative_verb_for_search", { enumerable: true, get: function () { return commands_genie_out_1.imperative_verb_for_search; } });
Object.defineProperty(exports, "generic_search_preamble", { enumerable: true, get: function () { return commands_genie_out_1.generic_search_preamble; } });
Object.defineProperty(exports, "generic_lookup_preamble", { enumerable: true, get: function () { return commands_genie_out_1.generic_lookup_preamble; } });
Object.defineProperty(exports, "generic_article", { enumerable: true, get: function () { return commands_genie_out_1.generic_article; } });
Object.defineProperty(exports, "search_command", { enumerable: true, get: function () { return commands_genie_out_1.search_command; } });
Object.defineProperty(exports, "complete_question", { enumerable: true, get: function () { return commands_genie_out_1.complete_question; } });
Object.defineProperty(exports, "projection_question", { enumerable: true, get: function () { return commands_genie_out_1.projection_question; } });
Object.defineProperty(exports, "explicit_when_condition", { enumerable: true, get: function () { return commands_genie_out_1.explicit_when_condition; } });
Object.defineProperty(exports, "when_command", { enumerable: true, get: function () { return commands_genie_out_1.when_command; } });
Object.defineProperty(exports, "monitor_command", { enumerable: true, get: function () { return commands_genie_out_1.monitor_command; } });
Object.defineProperty(exports, "complete_action", { enumerable: true, get: function () { return commands_genie_out_1.complete_action; } });
Object.defineProperty(exports, "say_command", { enumerable: true, get: function () { return commands_genie_out_1.say_command; } });
const stream_tables_genie_out_1 = require("./stream_tables.genie.out");
Object.defineProperty(exports, "complete_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.complete_table; } });
Object.defineProperty(exports, "complete_get_command", { enumerable: true, get: function () { return stream_tables_genie_out_1.complete_get_command; } });
Object.defineProperty(exports, "if_filtered_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.if_filtered_table; } });
Object.defineProperty(exports, "one_if_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_if_filter_table; } });
Object.defineProperty(exports, "two_if_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_if_filter_table; } });
Object.defineProperty(exports, "answer_noun_phrase", { enumerable: true, get: function () { return stream_tables_genie_out_1.answer_noun_phrase; } });
Object.defineProperty(exports, "one_with_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_with_filter_table; } });
Object.defineProperty(exports, "one_which_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_which_filter_table; } });
Object.defineProperty(exports, "one_clean_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_clean_filter_table; } });
Object.defineProperty(exports, "two_with_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_with_filter_table; } });
Object.defineProperty(exports, "two_which_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_which_filter_table; } });
Object.defineProperty(exports, "two_clean_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_clean_filter_table; } });
Object.defineProperty(exports, "three_with_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.three_with_filter_table; } });
Object.defineProperty(exports, "three_which_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.three_which_filter_table; } });
Object.defineProperty(exports, "three_clean_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.three_clean_filter_table; } });
Object.defineProperty(exports, "anything_phrase", { enumerable: true, get: function () { return stream_tables_genie_out_1.anything_phrase; } });
Object.defineProperty(exports, "anything_with_filter_phrase", { enumerable: true, get: function () { return stream_tables_genie_out_1.anything_with_filter_phrase; } });
Object.defineProperty(exports, "anything_which_filter_phrase", { enumerable: true, get: function () { return stream_tables_genie_out_1.anything_which_filter_phrase; } });
Object.defineProperty(exports, "anything_clean_filter_phrase", { enumerable: true, get: function () { return stream_tables_genie_out_1.anything_clean_filter_phrase; } });
Object.defineProperty(exports, "verb_filtered_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.verb_filtered_table; } });
Object.defineProperty(exports, "one_be_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_be_filter_table; } });
Object.defineProperty(exports, "one_have_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_have_filter_table; } });
Object.defineProperty(exports, "one_verb_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.one_verb_filter_table; } });
Object.defineProperty(exports, "two_be_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_be_filter_table; } });
Object.defineProperty(exports, "two_have_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_have_filter_table; } });
Object.defineProperty(exports, "two_verb_filter_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.two_verb_filter_table; } });
Object.defineProperty(exports, "generic_argminmax", { enumerable: true, get: function () { return stream_tables_genie_out_1.generic_argminmax; } });
Object.defineProperty(exports, "have_arg_min_max_table", { enumerable: true, get: function () { return stream_tables_genie_out_1.have_arg_min_max_table; } });
Object.defineProperty(exports, "edge_stream", { enumerable: true, get: function () { return stream_tables_genie_out_1.edge_stream; } });
Object.defineProperty(exports, "stream", { enumerable: true, get: function () { return stream_tables_genie_out_1.stream; } });
Object.defineProperty(exports, "with_filtered_table_join", { enumerable: true, get: function () { return stream_tables_genie_out_1.with_filtered_table_join; } });
Object.defineProperty(exports, "have_filtered_table_join", { enumerable: true, get: function () { return stream_tables_genie_out_1.have_filtered_table_join; } });
const joins_genie_out_1 = require("./joins.genie.out");
Object.defineProperty(exports, "short_phrase_table", { enumerable: true, get: function () { return joins_genie_out_1.short_phrase_table; } });
Object.defineProperty(exports, "out_param_symmetric", { enumerable: true, get: function () { return joins_genie_out_1.out_param_symmetric; } });
Object.defineProperty(exports, "self_join_table", { enumerable: true, get: function () { return joins_genie_out_1.self_join_table; } });
Object.defineProperty(exports, "generic_join_table", { enumerable: true, get: function () { return joins_genie_out_1.generic_join_table; } });
const verification_genie_out_1 = require("./verification.genie.out");
Object.defineProperty(exports, "boolean_question", { enumerable: true, get: function () { return verification_genie_out_1.boolean_question; } });
const qualifier_genie_out_1 = require("./qualifier.genie.out");
const wikidata_genie_out_1 = require("./wikidata.genie.out");
exports.$root = "$root";
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
async function $load($options, $locale, $grammar, $loader) {
    await (0, shared_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, constants_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, timers_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, filters_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, projections_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, aggregation_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, computation_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, who_questions_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, commands_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, stream_tables_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, joins_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, verification_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, qualifier_genie_out_1.$load)($options, $locale, $grammar, $loader);
    await (0, wikidata_genie_out_1.$load)($options, $locale, $grammar, $loader);
    $grammar.declareSymbol("$root");
    $grammar.addRule("$root", [new $runtime.NonTerminal("thingpedia_complete_program", "p", undefined)], "${p}", ((p) => C.makeProgram($loader, p)), undefined, {});
    if (!$options.flags.nostream) {
        if ($options.flags.timer) {
            $grammar.addRule("$root", [new $runtime.NonTerminal("timer_rule", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.2) });
        }
        $grammar.addRule("$root", [new $runtime.NonTerminal("monitor_command", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.2) });
        $grammar.addRule("$root", [new $runtime.NonTerminal("when_command", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.2) });
    }
    $grammar.addRule("$root", [new $runtime.NonTerminal("say_command", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.1) });
    $grammar.addRule("$root", [new $runtime.NonTerminal("complete_action", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("complete_action", "stmt", undefined)], $locale._("${generic_preamble_for_action} ${stmt}"), (($0, stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("forward_get_do_command", "stmt", undefined)], $locale._("${generic_preamble_for_action} ${stmt}"), (($0, stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("backward_get_do_command", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.1) });
    $grammar.addRule("$root", [new $runtime.NonTerminal("search_command", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("complete_question", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("projection_question", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, {});
    $grammar.addRule("$root", [new $runtime.NonTerminal("boolean_question", "stmt", undefined)], "${stmt}", ((stmt) => C.makeProgram($loader, stmt)), undefined, { weight: (0.2) });
}
exports.$load = $load;
;
//# sourceMappingURL=single-command.genie.out.js.map