import type $SentenceGenerator from "../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../sentence-generator/types";
import * as $I18n from "../i18n/index";
import { Ast } from 'thingtalk';
import ThingpediaLoader from './load-thingpedia';
export declare const pronoun_the_first: $SentenceGeneratorTypes.NonTerminal<string>;
export declare const pronoun_the_second: $SentenceGeneratorTypes.NonTerminal<string>;
export declare const each_other: $SentenceGeneratorTypes.NonTerminal<string>;
export declare const short_phrase_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const out_param_symmetric: $SentenceGeneratorTypes.NonTerminal<undefined>;
export declare const self_join_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const generic_join_table: $SentenceGeneratorTypes.NonTerminal<undefined>;
export declare const complete_table: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
