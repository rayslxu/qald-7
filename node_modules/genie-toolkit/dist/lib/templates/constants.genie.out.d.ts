import type $SentenceGenerator from "../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../sentence-generator/types";
import * as $I18n from "../i18n/index";
import { Ast } from 'thingtalk';
import ThingpediaLoader from './load-thingpedia';
export declare const at_time: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Time: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Number: $SentenceGeneratorTypes.NonTerminal<Ast.NumberValue>;
export declare const constant_date_point: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_date_range: $SentenceGeneratorTypes.NonTerminal<[Ast.Value, Ast.Value]>;
export declare const constant_day_of_week: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Date: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_ms: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const unit_Measure_ms: $SentenceGeneratorTypes.NonTerminal<'ms' | 's' | 'min' | 'h' | 'day' | 'week' | 'mon' | 'year'>;
export declare const constant_Measure_byte: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_kg: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_C: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_m: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_m2: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_m3: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_mps: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_W: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_lx: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_lm: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_dB: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Measure_dBm: $SentenceGeneratorTypes.NonTerminal<Ast.Value>;
export declare const constant_Location: $SentenceGeneratorTypes.NonTerminal<Ast.LocationValue>;
export declare const constant_pairs: $SentenceGeneratorTypes.NonTerminal<[Ast.Value, Ast.Value]>;
export declare const constant_or_pairs: $SentenceGeneratorTypes.NonTerminal<[Ast.Value, Ast.Value]>;
export declare const constant_nor_pairs: $SentenceGeneratorTypes.NonTerminal<[Ast.Value, Ast.Value]>;
export declare const constant_String_ContextRef: $SentenceGeneratorTypes.NonTerminal<Ast.ContextRefValue>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
