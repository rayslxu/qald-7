import type $SentenceGenerator from "../../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../../sentence-generator/types";
import * as $I18n from "../../i18n/index";
import { Ast } from 'thingtalk';
import * as C from '../ast_manip';
import ThingpediaLoader from '../load-thingpedia';
export declare const empty_search_error: $SentenceGeneratorTypes.NonTerminal<[Ast.InvocationExpression | null, C.ParamSlot | null, boolean]>;
export declare const precise_empty_search_change_request: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const imprecise_empty_search_change_request: $SentenceGeneratorTypes.NonTerminal<Ast.Value | C.FilterSlot>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
