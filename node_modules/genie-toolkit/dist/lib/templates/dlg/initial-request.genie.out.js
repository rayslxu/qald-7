"use strict";
// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$load = exports.initial_command = void 0;
const $runtime = __importStar(require("../../sentence-generator/runtime"));
const C = __importStar(require("../ast_manip"));
const D = __importStar(require("../dialogue_acts"));
exports.initial_command = "initial_command";
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
async function $load($options, $locale, $grammar, $loader) {
    $grammar.declareSymbol("initial_command");
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("say_command", undefined, undefined)], "${say_command}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (0.1), identity: (true) });
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("complete_action", undefined, undefined)], "${complete_action}", (($0) => { return $0; }), C.expressionKeyFn, { identity: (true) });
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("complete_action", "action", undefined)], $locale._("${generic_preamble_for_action} ${action}"), (($0, action) => action), C.expressionKeyFn, {});
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("forward_get_do_command", "action", undefined)], $locale._("${generic_preamble_for_action} ${action}"), (($0, action) => action), C.expressionKeyFn, { weight: (0.1) });
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("search_command", undefined, undefined)], "${search_command}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (2), identity: (true) });
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("complete_question", undefined, undefined)], "${complete_question}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (0.5), identity: (true) });
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("projection_question", undefined, undefined)], "${projection_question}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (0.1), identity: (true) });
    if ($options.flags.dontcare) {
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("search_command", "stmt", undefined), new $runtime.NonTerminal("specific_dontcare_phrase", "dontcare", undefined)], $locale._("${stmt} {.|,} ${dontcare}"), ((stmt, dontcare) => D.addInitialDontCare(stmt, dontcare)), C.expressionKeyFn, { weight: (0.1) });
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("complete_action", "stmt", undefined), new $runtime.NonTerminal("specific_dontcare_phrase", "dontcare", undefined)], $locale._("${stmt} {.|,} ${dontcare}"), ((stmt, dontcare) => D.addInitialDontCare(stmt, dontcare)), C.expressionKeyFn, { weight: (0.1) });
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("complete_action", "stmt", undefined), new $runtime.NonTerminal("specific_dontcare_phrase", "dontcare", undefined)], $locale._("${generic_preamble_for_action} ${stmt} {.|,} ${dontcare}"), (($0, stmt, dontcare) => D.addInitialDontCare(stmt, dontcare)), C.expressionKeyFn, { weight: (0.1) });
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("generic_preamble_for_action", undefined, undefined), new $runtime.NonTerminal("forward_get_do_command", "stmt", undefined), new $runtime.NonTerminal("specific_dontcare_phrase", "dontcare", undefined)], $locale._("${generic_preamble_for_action} ${stmt} {.|,} ${dontcare}"), (($0, stmt, dontcare) => D.addInitialDontCare(stmt, dontcare)), C.expressionKeyFn, { weight: (0.1) });
    }
    if (!$options.flags.nostream) {
        if ($options.flags.timer) {
            $grammar.addRule("initial_command", [new $runtime.NonTerminal("timer_rule", "stmt", undefined)], "${stmt}", ((stmt) => stmt), C.expressionKeyFn, { weight: (0.2) });
        }
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("monitor_command", undefined, undefined)], "${monitor_command}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (0.1), identity: (true) });
        $grammar.addRule("initial_command", [new $runtime.NonTerminal("when_command", undefined, undefined)], "${when_command}", (($0) => { return $0; }), C.expressionKeyFn, { weight: (0.1), identity: (true) });
    }
    $grammar.addRule("initial_command", [new $runtime.NonTerminal("thingpedia_complete_program", undefined, undefined)], "${thingpedia_complete_program}", (($0) => { return $0; }), C.expressionKeyFn, { identity: (true) });
}
exports.$load = $load;
;
//# sourceMappingURL=initial-request.genie.out.js.map