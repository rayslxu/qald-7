import type $SentenceGenerator from "../../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../../sentence-generator/types";
import * as $I18n from "../../i18n/index";
import { Ast } from 'thingtalk';
import * as D from '../dialogue_acts';
import * as S from '../state_manip';
import ThingpediaLoader from '../load-thingpedia';
export declare const search_result_preamble: $SentenceGeneratorTypes.NonTerminal<S.ContextInfo>;
export declare const system_generic_proposal: $SentenceGeneratorTypes.NonTerminal<S.AgentReplyRecord>;
export declare const negative_proposal_request: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const negative_proposal_answer_preamble: $SentenceGeneratorTypes.NonTerminal<Ast.Expression>;
export declare const negative_proposal_reply: $SentenceGeneratorTypes.NonTerminal<D.NegativeProposalReply>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
