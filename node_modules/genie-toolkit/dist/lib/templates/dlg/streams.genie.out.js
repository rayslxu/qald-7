"use strict";
// -*- mode: js; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Genie
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$load = exports.add_separate_stream = exports.add_separate_stream_to_query = exports.notification_error_preamble = exports.notification_preamble = void 0;
// Templates for converting one-shot commands into continuous commands
const $runtime = __importStar(require("../../sentence-generator/runtime"));
const C = __importStar(require("../ast_manip"));
const S = __importStar(require("../state_manip"));
const D = __importStar(require("../dialogue_acts"));
exports.notification_preamble = "notification_preamble";
exports.notification_error_preamble = "notification_error_preamble";
exports.add_separate_stream_to_query = "add_separate_stream_to_query";
exports.add_separate_stream = "add_separate_stream";
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
async function $load($options, $locale, $grammar, $loader) {
    $grammar.declareSymbol("notification_preamble");
    $grammar.addRule("notification_preamble", [new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined)], $locale._("reminder:"), ((ctx) => D.checkIsReminder(ctx, 'say')), S.contextKeyFn, { priority: (1) });
    $grammar.addRule("notification_preamble", [new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined)], $locale._("alert:"), ((ctx) => D.checkIsReminder(ctx, 'alert')), S.contextKeyFn, { priority: (1) });
    $grammar.addRule("notification_preamble", [new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined)], $locale._("alert:"), ((ctx) => D.checkIsReminder(ctx, 'timer_expire')), S.contextKeyFn, { priority: (1) });
    $grammar.addRule("notification_preamble", [new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined), new $runtime.NonTerminal("ctx_notification_app_name", "app", undefined)], $locale._("notification from ${app}:"), ((ctx, app) => ctx), S.contextKeyFn, {});
    $grammar.addRule("notification_preamble", [new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined)], '', ((ctx) => ctx.state.dialogueActParam === null ? ctx : null), S.contextKeyFn, { priority: (-1) });
    $grammar.declareSymbol("notification_error_preamble");
    $grammar.addRule("notification_error_preamble", [new $runtime.NonTerminal("sorry_preamble", "sorry", undefined), new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined), new $runtime.NonTerminal("ctx_notification_app_name", "app", undefined)], $locale._("${sorry} {there was an error in|an error occurred in} ${app}:"), ((sorry, ctx, app) => ctx), S.contextKeyFn, {});
    $grammar.addRule("notification_error_preamble", [new $runtime.NonTerminal("sorry_preamble", "sorry", undefined), new $runtime.NonTerminal("ctx_with_notification", "ctx", undefined)], $locale._("${sorry} {there was an error}:"), ((sorry, ctx) => ctx.state.dialogueActParam === null ? ctx : null), S.contextKeyFn, {});
    $grammar.declareSymbol("add_separate_stream_to_query");
    if ($options.flags.timer) {
        $grammar.addRule("add_separate_stream_to_query", [new $runtime.NonTerminal("timer", "stream", undefined)], $locale._("{send this to me|send it to me|i want to see this|i want this|send this} ${stream}"), ((stream) => stream), C.expressionKeyFn, {});
    }
    $grammar.addRule("add_separate_stream_to_query", [new $runtime.NonTerminal("stream", "stream", undefined)], $locale._("{send this to me|send it to me|i want to see this|i want this|send this} ${stream}"), ((stream) => stream), C.expressionKeyFn, {});
    $grammar.declareSymbol("add_separate_stream");
    $grammar.addRule("add_separate_stream", [new $runtime.NonTerminal("stream", "stream", undefined)], $locale._("{do this|do it|do it automatically} ${stream}"), ((stream) => stream), C.expressionKeyFn, {});
    if ($options.flags.timer) {
        $grammar.addRule("add_separate_stream", [new $runtime.NonTerminal("timer", "stream", undefined)], $locale._("{do this|do it|do it automatically} ${stream}"), ((stream) => stream), C.expressionKeyFn, {});
    }
}
exports.$load = $load;
;
//# sourceMappingURL=streams.genie.out.js.map