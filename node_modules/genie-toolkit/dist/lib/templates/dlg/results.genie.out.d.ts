import type $SentenceGenerator from "../../sentence-generator/generator";
import * as $SentenceGeneratorTypes from "../../sentence-generator/types";
import * as $I18n from "../../i18n/index";
import * as C from '../ast_manip';
import * as D from '../dialogue_acts';
import ThingpediaLoader from '../load-thingpedia';
export declare const direct_answer_phrase: $SentenceGeneratorTypes.NonTerminal<D.DirectAnswerPhrase>;
export declare const direct_answer_phrase_0: $SentenceGeneratorTypes.NonTerminal<D.DirectAnswerPhrase>;
export declare const direct_answer_phrase_1: $SentenceGeneratorTypes.NonTerminal<D.DirectAnswerPhrase>;
export declare const direct_answer_phrase_2: $SentenceGeneratorTypes.NonTerminal<D.DirectAnswerPhrase>;
export declare const direct_answer_phrase_3: $SentenceGeneratorTypes.NonTerminal<D.DirectAnswerPhrase>;
export declare const direct_result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const one_param_direct_result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const two_param_direct_result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const three_param_direct_result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const four_param_direct_result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const result_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const base_result_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const equal_with_filter: $SentenceGeneratorTypes.NonTerminal<C.FilterSlot>;
export declare const one_with_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const one_which_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const one_clean_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const two_with_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const two_which_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const two_clean_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const three_with_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const three_which_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const three_clean_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const n_with_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const n_which_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
export declare const n_clean_info_phrase: $SentenceGeneratorTypes.NonTerminal<D.ResultPhrase>;
/**
 * Load the templates in this file.
 *
 * This is an autogenerated method that will be called by the {@link SentenceGenerator}
 * when the templates are imported.
 */
export declare function $load($options: $SentenceGeneratorTypes.GrammarOptions, $locale: $I18n.LanguagePack, $grammar: $SentenceGenerator, $loader: ThingpediaLoader): Promise<void>;
