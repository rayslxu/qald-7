class @org.thingpedia.builtin.thingengine.builtin extends @org.thingpedia.volume-control
#_[thingpedia_name="Verschiedene Schnittstellen"]
#_[thingpedia_description="Zeit, Zufallszahlen und andere Befehle, die nicht spezifisch für jede Fähigkeit sind"]
#_[name="Verschiedene Schnittstellen"]
#_[description="Zeit, Zufallszahlen und andere Befehle, die nicht spezifisch für jede Fähigkeit sind"]
#_[canonical="Verschiedene Schnittstellen"]
#_[help="Ich kann Ihnen das aktuelle Datum und die Uhrzeit geben, zufällige Zahlen auswählen und Ihnen helfen, verschiedene Einstellungen festzulegen"]
#[repository="https://github.com/stanford-oval/genie-toolkit"]
#[subcategory="service"]
#[license="Apache-2.0"]
#[license_gplcompatible=true] {
  import loader from @org.thingpedia.builtin();

  import config from @org.thingpedia.config.builtin();

  monitorable query get_gps(out location : Location
                            #_[canonical={
                              default="preposition",
                              base="Koordinaten: [pos=base]",
                              filter_phrase="{in der ${value} [pos=preposition]|bei: ${value} [pos=preposition]|um herum ${value} [pos=preposition]}",
                              enum_filter={}
                            }],
                            out altitude : Measure(m)
                            #_[canonical={
                              default="base",
                              base="Höhe der [pos=base]",
                              filter_phrase="bei: ${value} über dem Meeresspiegel [pos=preposition]",
                              enum_filter={}
                            }]
                            #[min_number=0m]
                            #[max_number=15000m],
                            out bearing : Number
                            #_[canonical={
                              default="base",
                              base="Lagern [pos=base]",
                              filter_phrase="mit Blick ${value} [pos=passive_verb]",
                              enum_filter={}
                            }],
                            out speed : Measure(mps)
                            #_[canonical={
                              default="base",
                              base="Geschwindigkeits [pos=base]",
                              filter_phrase="{auf der ${value} [pos=passive_verb]|bewegt sich ${value} [pos=passive_verb]|bei: ${value} [pos=preposition]}",
                              enum_filter={}
                            }])
  #_[canonical="{Mein aktueller Standort|meine aktuelle Position|meine aktuellen Geokoordinaten}"]
  #_[result=["Ihr aktueller Standort ist ${location}", "Sie sind derzeit in ${location}"]]
  #_[on_error={
    unsupported_platform=["Ich kann nicht auf Ihren Standort in dieser Version von Genie zugreifen"]
  }]
  #[minimal_projection=["location"]]
  #[poll_interval=0ms]
  #[doc="get last known GPS location"]
  #[confirm=false];

  query get_time(out time : Time
                 #_[canonical={
                   default="base",
                   base="Zeit n",
                   filter_phrase="Zeit n ${value} [pos=property]",
                   enum_filter={}
                 }]
                 #[filterable=false])
  #_[canonical="{Aktuelle Zeit|Zeit n|Tageszeit}"]
  #_[result=["Jetzt ist es ${time}", "Es ist ${time}", "die aktuelle Zeit ist ${time}"]]
  #[doc="get the current time"]
  #[confirm=false]
  #[minimal_projection=[]];

  query get_date(out date : Date
                 #_[canonical={
                   default="base",
                   base="Datum der",
                   filter_phrase="Datum der ${value} [pos=property]",
                   enum_filter={}
                 }]
                 #[filterable=false])
  #_[canonical="{Datum von heute|Datum der|Datum der Anwendung}"]
  #_[confirmation="Datum von heute"]
  #_[result=["Heute ist ${date} - Absolut"]]
  #[doc="get the current date"]
  #[confirm=false]
  #[minimal_projection=[]];

  query get_random_between(in opt low : Number
                           #_[canonical={
                             default="base",
                             base="{untere Grenze [pos=base]|Mindestzahl [pos=base]}",
                             filter_phrase="{höher als ${value} [pos=passive_verb]|mehr als ${value} [pos=passive_verb]}",
                             enum_filter={}
                           }],
                           in opt high : Number
                           #_[canonical={
                             default="base",
                             base="{Obergrenze [pos=base]|Höchstzahl [pos=base]}",
                             filter_phrase="{höher als ${value} [pos=passive_verb]|mehr als ${value} [pos=passive_verb]}",
                             enum_filter={}
                           }],
                           out random : Number
                           #_[canonical={
                             default="base",
                             base="{Anzahl: [pos=base]|Ergebnis: [pos=base]}",
                             enum_filter={}
                           }]
                           #[filterable=false])
  #_[canonical="{Zufallszahl|zufällige Ganzzahl}"]
  #_[result=["${random}", "Ihre Nummer ist ${random}", "Ich habe gewählt ${random}"]]
  #_[confirmation="eine zufällige Ganzzahl zwischen $low and $high"]
  #[doc="get a uniform random integer between `low` and `high`"]
  #[confirm=false]
  #[minimal_projection=[]];

  query get_name(out name : String
                 #_[canonical={
                   default="base",
                   base="Bezeichnung:",
                   filter_phrase="Bezeichnung: ${value} [pos=property]",
                   enum_filter={}
                 }]
                 #[string_values="tt:person_first_name"]
                 #[filterable=false])
  #_[canonical="{Mein Name|Name des Benutzers}"]
  #_[result=["Ihr Name ist ${name}", "du wirst ${name}"]]
  #_[on_error={
    unset=["Ich kenne Ihren Namen noch nicht. Möchten Sie mir sagen?", "du hast mir deinen Namen noch nicht gesagt"]
  }]
  #_[confirmation="Ihr Name"]
  #[doc="get the user's preferred name (a setting)"]
  #[confirm=false]
  #[minimal_projection=[]];

  query device_info(in req id : Entity(tt:device)
                    #_[canonical={
                      default="base",
                      base="Bezeichnung: [pos=base]",
                      filter_phrase="{benannt nach ${value} [pos=passive_verb]|aufgerufen. ${value} [pos=passive_verb]}",
                      enum_filter={}
                    }],
                    out help : String
                    #_[canonical={
                      default="base",
                      base="{Hilfe! [pos=base]|Dokumentationen [pos=base]}",
                      enum_filter={}
                    }]
                    #[string_values="tt:long_free_text"]
                    #[filterable=false],
                    out description : String
                    #_[canonical={
                      default="base",
                      base="Beschreibung: [pos=base]",
                      enum_filter={}
                    }]
                    #[string_values="tt:long_free_text"]
                    #[filterable=false],
                    out category : Enum(service, media, social_network, communication, home, health, data_management)
                    #_[canonical={
                      default="base",
                      base="Kategorie: [pos=base]",
                      filter_phrase="{${value} [pos=adjective]|im Anhang ${value} Kategorie: [pos=preposition]}",
                      enum_filter={},
                      enum_value={
                        service="Dienstleistungen",
                        media="Medien und",
                        social_network="soziales Netzwerk",
                        communication="Kommunikation und",
                        home="Zuhause",
                        health="Gesundheit und",
                        data_management="Datenverwaltung"
                      }
                    }],
                    out thingpedia_url : Entity(tt:url)
                    #_[canonical={
                      default="base",
                      base="{Seite der Sache [pos=base]|dingpedia link [pos=base]}",
                      enum_filter={}
                    }]
                    #[filterable=false],
                    out website : Entity(tt:url)
                    #_[canonical={
                      default="base",
                      base="{Website: [pos=base]|Verknüpfungen [pos=base]|URl [pos=base]}",
                      enum_filter={}
                    }]
                    #[filterable=false],
                    out issue_tracker : Entity(tt:url)
                    #_[canonical={
                      default="base",
                      base="{Website zur Fehlerverfolgung [pos=base]|Fehlerbericht url [pos=base]}",
                      enum_filter={}
                    }]
                    #[filterable=false])
  #_[canonical="{Informationen über ein Gerät|Informationen über eine Fertigkeit|Informationen über ein Thingpedia-Gerät|Informationen über eine unterstützte Fähigkeit|Hilfe über eine Fähigkeit|Geschicklichkeitshilfen|Geschicklichkeitsdokumentation|Hilfe mit einer Fähigkeit}"]
  #_[result=["mit dem ${id} , ${help} . besuchen Sie die thingpedia Seite für weitere Informationen", "die Beschreibung der ${id} wird. ${description} . besuchen Sie die thingpedia Seite für weitere Informationen"]]
  #_[formatted=[{
    type="rdl",
    displayTitle="${id}",
    webCallback="${thingpedia_url}"
  }]]
  #[doc="query info about supported Thingpedia devices"]
  #[minimal_projection=[]]
  #[confirm=false];

  list query configured_device_info(out id : Entity(tt:device_id)
                                    #_[canonical={
                                      default="base",
                                      base="Bezeichnung: [pos=base]",
                                      filter_phrase="{benannt nach ${value} [pos=passive_verb]|aufgerufen. ${value} [pos=passive_verb]}",
                                      enum_filter={}
                                    }],
                                    out description : String
                                    #_[canonical={
                                      default="base",
                                      base="Beschreibung: [pos=base]",
                                      enum_filter={}
                                    }]
                                    #[string_values="tt:long_free_text"]
                                    #[filterable=false],
                                    out kind : Entity(tt:device)
                                    #_[canonical={
                                      default="base",
                                      base="Art der [pos=base]",
                                      filter_phrase="{${value} [pos=adjective]|im Anhang ${value} Art der [pos=preposition]}",
                                      enum_filter={}
                                    }],
                                    out version : Number
                                    #_[canonical={
                                      default="base",
                                      base="Fassung: [pos=base]",
                                      filter_phrase="Fassung: ${value} [pos=passive_verb]",
                                      enum_filter={}
                                    }],
                                    out category : Enum(physical, online, data, system)
                                    #_[canonical={
                                      default="base",
                                      base="Kategorie: [pos=base]",
                                      filter_phrase="{${value} [pos=adjective]|im Anhang ${value} Kategorie: [pos=preposition]}",
                                      enum_filter={},
                                      enum_value={
                                        physical="physischer",
                                        online="online",
                                        data="Datendaten",
                                        system="System:"
                                      }
                                    }],
                                    out is_transient : Boolean
                                    #_[canonical={
                                      default="base",
                                      base="ist vorübergehend [pos=base]",
                                      enum_filter={}
                                    }],
                                    out auth_type : String
                                    #_[canonical={
                                      default="base",
                                      base="Art der Authentifizierung [pos=base]",
                                      enum_filter={}
                                    }]
                                    #[filterable=false])
  #_[canonical="{Informationen über konfigurierte Geräte|Informationen über konfigurierte Entities|konfigurierte Geräte|konfigurierte Entities|Geräteliste [plural=one]|Gerätelisten [plural=other]|Liste der Unternehmen [plural=one]|Entitätslisten [plural=other]|Geräte für die Fernsteuerung|Iot-Einheiten}"]
  #_[result={
    list ="Du hast ${id}"
  }]
  #[doc="query info about configured devices"]
  #[minimal_projection=[]]
  #[confirm=false];

  action open_url(in req url : Entity(tt:url)
                  #_[prompt=["Was URL wollen Sie öffnen", "was wollen Sie öffnen"]]
                  #_[canonical={
                    default="base",
                    base="{URl [pos=base]|Verknüpfungen [pos=base]|Seite: [pos=base]}",
                    filter_phrase="zu: ${value} [pos=preposition]",
                    enum_filter={}
                  }])
  #_[canonical="{Öffnen Sie eine URL|Link öffnen}"]
  #_[on_error={
    unsupported_platform=["Dateien öffnen ist in dieser Version von Genie nicht möglich"]
  }]
  #[doc="open a file/link"]
  #[confirm=false]
  #[minimal_projection=[]];

  action say(in req message : String
             #_[prompt="Was soll ich sagen?"]
             #_[canonical={
               default="base",
               base="Nachricht:",
               filter_phrase="Nachricht: ${value} [pos=property]",
               enum_filter={}
             }]
             #[string_values="tt:long_free_text"],
             out message_output : String
             #_[canonical={
               default="base",
               base="Nachricht:",
               filter_phrase="Nachricht: ${value} [pos=property]",
               enum_filter={}
             }])
  #_[result="${message_output}"]
  #_[formatted=[{
    type="sound",
    name="Alarm-Uhr-verstrichen",
    exclusive=false,
    before=true
  }]]
  #_[canonical="sagen:"]
  #[doc="makes Genie say something"]
  #[confirm=false]
  #[minimal_projection=[]];

  action alert(out time : Time
               #_[canonical={
                 default="base",
                 base="Zeit n",
                 filter_phrase="Zeit n ${value} [pos=property]",
                 enum_filter={}
               }])
  #_[result="Es ist ${time}"]
  #_[formatted=[{
    type="sound",
    name="Alarm-Uhr-verstrichen",
    exclusive=false,
    before=true
  }]]
  #_[canonical="Warnung:"]
  #[doc="makes Genie show/play a generic alert"]
  #[confirm=false]
  #[minimal_projection=[]];

  action timer_expire(out duration : Measure(ms)
                      #_[canonical={
                        default="base",
                        base="Dauer der Maßnahme",
                        filter_phrase="Dauer der Maßnahme ${value} [pos=property]",
                        enum_filter={}
                      }])
  #_[result="Es ist ${duration}"]
  #_[formatted=[{
    type="sound",
    name="Alarm-Uhr-verstrichen",
    exclusive=false,
    before=true
  }]]
  #_[canonical="Zeiterlöschung"]
  #[doc="makes Genie play a generic alert and show/say the elapsed time"]
  #[confirm=false]
  #[minimal_projection=[]];

  action debug_log(in req message : String
                   #_[prompt=["was soll ich in die Logs schreiben?", "Was soll ich schreiben?"]]
                   #_[canonical={
                     default="base",
                     base="Nachricht:",
                     filter_phrase="Nachricht: ${value} [pos=property]",
                     enum_filter={}
                   }]
                   #[string_values="tt:long_free_text"])
  #_[canonical="{Protokollieren einer Nachricht|eine Nachricht aufnehmen|eine Nachricht in die Protokolle schreiben}"]
  #_[confirmation="schreiben. $message in the developer logs"]
  #[doc="log a message in the developer logs"]
  #[confirm=false]
  #[minimal_projection=[]];

  action faq_reply(in req question : Enum(about_almond_identity, about_almond_age, about_almond_how_are_you, about_almond_special, about_almond_motivation, about_almond_location, about_almond_comparison, about_almond_comparison_general, about_almond_training, about_almond_partner, about_almond_junk, about_almond_preference, about_almond_thingpedia, about_almond_interest, about_almond_registration, check_capability_home_assistant, check_capability_phone, check_capability_music_platform, general_help, iot_help, command_help, positive_emotion_thanks, positive_emotion_cool, negative_emotion_empathy, abusive, revoke_consent, how_to_train, how_to_configure_skill, how_to_disable_skill, how_to_set_language, how_to_access_settings, how_to_use_wakeword, how_to_report_bug, how_to_show_general_examples, how_to_show_home_assistant_examples, troubleshooting_home_assistant)
                   #_[prompt="was möchten Sie wissen"]
                   #_[canonical={
                     default="base",
                     base="Nachricht:",
                     filter_phrase="Nachricht: ${value} [pos=property]",
                     enum_filter={},
                     enum_value={
                       about_almond_identity="über Mandelidentität",
                       about_almond_age="über Mandelalter",
                       about_almond_how_are_you="über Mandel wie geht es dir",
                       about_almond_special="über Mandelspezial",
                       about_almond_motivation="über Mandelmotivation",
                       about_almond_location="über Mandellage",
                       about_almond_comparison="über Mandelvergleich",
                       about_almond_comparison_general="über Mandelvergleich allgemein",
                       about_almond_training="über Mandeltraining",
                       about_almond_partner="über Mandelpartner",
                       about_almond_junk="über Mandelschrott",
                       about_almond_preference="über Mandeln bevorzugt",
                       about_almond_thingpedia="über Mandel-Dingpedia",
                       about_almond_interest="über Mandel-Interessen",
                       about_almond_registration="über die Mandelregistrierung",
                       check_capability_home_assistant="Kontrollfähigkeit Home Assistent",
                       check_capability_phone="Überprüfung Fähigkeit Telefon",
                       check_capability_music_platform="Fähigkeit Musik-Plattform überprüfen",
                       general_help="Allgemeine Hilfe",
                       iot_help="Hilfeleistung",
                       command_help="Befehlshilfe",
                       positive_emotion_thanks="positive Emotion dank",
                       positive_emotion_cool="positive Emotion kühl",
                       negative_emotion_empathy="negative Gefühlsempathie",
                       abusive="missbräuchlich",
                       revoke_consent="Widerruf der Einwilligung",
                       how_to_train="Wie man trainiert",
                       how_to_configure_skill="Wie man Fähigkeiten konfiguriert",
                       how_to_disable_skill="Wie man Fähigkeiten deaktiviert",
                       how_to_set_language="wie man Sprache setzt",
                       how_to_access_settings="Wie man auf Einstellungen zugreift",
                       how_to_use_wakeword="Wie man Wakeword verwendet",
                       how_to_report_bug="wie Fehler zu melden sind",
                       how_to_show_general_examples="Wie man allgemeine Beispiele zeigt",
                       how_to_show_home_assistant_examples="Wie man Heimassistentenbeispiele zeigt",
                       troubleshooting_home_assistant="Fehlersuche zu Hause Assistent"
                     }
                   }],
                   out reply : String
                   #_[canonical={
                     default="base",
                     base="{Antwort:|Antwort:}",
                     filter_phrase="{Antwort: ${value} [pos=property]|Antwort: ${value} [pos=property]}",
                     enum_filter={}
                   }])
  #_[result="${reply}"]
  #_[canonical="Frage stellen über Genie"]
  #_[confirmation="Antwort auf $question"]
  #[doc="asks a question about Genie"]
  #[confirm=false]
  #[minimal_projection=[]];

  action configure(in req device : Entity(tt:device)
                   #_[prompt="welches Gerät Sie konfigurieren möchten"]
                   #_[canonical={
                     default="base",
                     base="Einrichtungseinrichtung",
                     filter_phrase="Einrichtungseinrichtung ${value} [pos=property]",
                     enum_filter={}
                   }])
  #_[canonical="{eine neue Fertigkeit konfigurieren|eine neue Fertigkeit ermöglichen}"]
  #_[on_error={
    unsupported_skill=["ich weiß nicht ${device} noch nicht", "${device} wird noch nicht unterstützt"],
    unsupported_platform=["Sie müssen auf die Seite neue Fähigkeiten konfigurieren gehen, um neue Fähigkeiten zu ermöglichen"]
  }]
  #_[confirmation="eine neue Konfiguration einrichten $device"]
  #[doc="configure a specific device by type"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_language(in req language : Entity(tt:iso_lang_code)
                      #_[canonical={
                        default="base",
                        base="Sprache: [pos=base]",
                        filter_phrase="zu: ${value} [pos=preposition]",
                        enum_filter={}
                      }])
  #_[canonical="{Sprache festlegen|Sprache ändern|Die Assistentensprache festlegen|die Sprache des Assistenten festlegen}"]
  #_[on_error={
    unsupported_language=["${language} wird noch nicht unterstützt", "ich unterstütze nicht ${language} noch nicht"],
    unsupported_platform_cloud=["Sie müssen auf die Benutzerprofilseite gehen, um die Sprache zu ändern"]
  }]
  #_[confirmation="die Sprache auf $language"]
  #[doc="change the assistant language (not supported on all platforms)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_timezone(in req timezone : Entity(tt:timezone)
                      #_[canonical={
                        default="base",
                        base="Zeitzonen [pos=base]",
                        filter_phrase="zu: ${value} [pos=preposition]",
                        enum_filter={}
                      }])
  #_[canonical="{Zeitzone festlegen|die Zeitzone ändern|die Zeitzone des Assistenten festlegen}"]
  #_[on_error={
    unsupported_platform=["Ich kann die Zeitzone auf diesem System nicht ändern. Verwenden Sie die Systemeinstellungen, um meine Zeitzone zu ändern"],
    unsupported_platform_cloud=["Sie müssen auf die Benutzerprofilseite gehen, um die Zeitzone zu ändern"]
  }]
  #_[confirmation="die Zeitzone auf $timezone"]
  #[doc="change the assistant time zone (not supported on all platforms)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_wake_word(in req word : String
                       #_[canonical={
                         default="base",
                         base="Wort: [pos=base]",
                         filter_phrase="zu: ${value} [pos=preposition]",
                         enum_filter={}
                       }]
                       #[string_values="tt:word"])
  #_[canonical="{den Namen des Assistenten festlegen|das Weckwort setzen|das heiße Wort setzen|Ändern Sie das Weckwort|den Namen des Assistenten festlegen|den Namen des Assistenten ändern}"]
  #_[on_error={
    unsupported=["das Weckwort zu ändern wird noch nicht unterstützt", "Ich unterstütze noch nicht, meinen Namen zu ändern"]
  }]
  #_[confirmation="das Weckwort auf $language"]
  #[doc="change the assistant name (wake word) (not supported yet)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_voice_output(in req status : Enum(on, off)
                          #_[canonical={
                            default="base",
                            base="{Status: [pos=base]|Präferenzen [pos=base]}",
                            filter_phrase="zu: ${value} [pos=preposition]",
                            enum_filter={},
                            enum_value={
                               on ="am am",
                              off="Aus-"
                            }
                          }])
  #_[canonical="die Einstellung der Sprachausgabe ändern"]
  #_[on_error={
    unsupported=["Sprachausgabe wird auf dieser Plattform nicht unterstützt"]
  }]
  #_[confirmation="drehen. ${status} Sprachausgabe"]
  #[doc="turn on or off voice output"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_voice_input(in req status : Enum(on, off)
                         #_[canonical={
                           default="base",
                           base="{Status: [pos=base]|Präferenzen [pos=base]}",
                           filter_phrase="zu: ${value} [pos=preposition]",
                           enum_filter={},
                           enum_value={
                              on ="am am",
                             off="Aus-"
                           }
                         }])
  #_[canonical="Änderung der Spracheingabeeinstellung"]
  #_[on_error={
    unsupported=["Spracheingabe wird auf dieser Plattform nicht unterstützt"]
  }]
  #_[confirmation="drehen. ${status} Spracheingabe"]
  #[doc="turn on or off voice input"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_name(in req name : String
                  #_[canonical={
                    default="base",
                    base="Bezeichnung: [pos=base]",
                    filter_phrase="zu: ${value} [pos=preposition]",
                    enum_filter={}
                  }]
                  #[string_values="tt:person_first_name"])
  #_[canonical="{meinen Namen ändern|meinen Namen setzen}"]
  #_[confirmation="ändern Sie Ihren Namen in ${name}"]
  #[doc="change the user's preferred name (a setting)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_location(in opt type : Enum(current, home, work)
                      #_[prompt="welche Art von Standort Sie ändern möchten"]
                      #_[canonical={
                        default="base",
                        base="Typ:",
                        filter_phrase="Typ: ${value} [pos=property]",
                        enum_filter={},
                        enum_value={
                          current="Aktueller",
                          home="Zuhause",
                          work="Arbeit arbeit"
                        }
                      }]
                      #[default=enum current],
                      in req location : Location
                      #_[canonical={
                        default="base",
                        base="{Standort: [pos=base]|Ort: [pos=base]|Anschrift: [pos=base]}",
                        filter_phrase="{zu: ${value} [pos=preposition]|als: ${value} [pos=preposition]}",
                        enum_filter={}
                      }])
  #_[canonical="{meinen Standort festlegen|meine Adresse festlegen|Erinnere dich an meinen Standort|meinen Standort konfigurieren}"]
  #_[confirmation="ändern Sie Ihre ${type} Ort zu ${name}"]
  #[doc="change the user's preferred locations (a setting)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action set_temperature_unit(in req unit : Enum(celsius, fahrenheit, kelvin)
                              #_[prompt="welche Einheit ich verwenden soll"]
                              #_[canonical={
                                default="base",
                                base="Einheit: [pos=base]",
                                filter_phrase="{zu: ${value} [pos=preposition]|als: ${value} [pos=preposition]}",
                                enum_filter={},
                                enum_value={
                                  celsius="Zelsius",
                                  fahrenheit="Gastfreundschaft",
                                  kelvin="Kelvin"
                                }
                              }])
  #_[canonical="{meine bevorzugte Temperatureinheit einstellen|Temperatureinheit ändern|Standardtemperatureinheit einstellen}"]
  #[doc="change the user's preferred temperature unit (a setting)"]
  #[confirm=false]
  #[minimal_projection=[]];

  action stop()
  #_[canonical="{Audio stoppen|Hör auf zu spielen|Wiedergabe beenden}"]
  #[doc="pause the currently playing skill"]
  #[confirm=false]
  #[minimal_projection=[]];

  action pause()
  #_[canonical="{Pausen|Pause Audio|Wiedergabe der Pause|Pause spielen}"]
  #[doc="pause the currently playing skill"]
  #[confirm=false]
  #[minimal_projection=[]];

  action resume()
  #_[canonical="{Zusammenfassung der|Audio fortsetzen|Wiedergabe fortsetzen|Wiedergabe fortsetzen|wieder spielen|Wiedergabe fortsetzen|Weiterspielen}"]
  #_[on_error={
    unsupported=["die aktuelle Fähigkeit unterstützt nicht die Wiederaufnahme von Audio. bitte melden Sie diese Frage an den Geschicklichkeitsentwickler"],
    no_device_playing=["noch nichts spielt. Musik zu spielen, kann man sagen Musik zu spielen"]
  }]
  #[doc="resume the currently playing skill"]
  #[confirm=false]
  #[minimal_projection=[]];
}