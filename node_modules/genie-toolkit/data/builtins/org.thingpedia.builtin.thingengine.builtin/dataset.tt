dataset @org.thingpedia.builtin.thingengine.builtin
#[language="en"] {
  stream = monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps())
  #_[utterances=["when my location changes", "when i move", "when i move around", "when i change location", "when my position changes"]]
  #[id=53269105]
  #[name="MonitorGetCurrentLocation"];

  stream (p_location : Location) = monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter location == p_location
  #_[utterances=["when my location changes to $p_location", "when i reach $p_location", "when i get to $p_location", "when i arrive at $p_location"]]
  #[id=53269110]
  #[name="MonitorGetCurrentLocationByLocation"];

  stream (p_location : Location) = monitor(@org.thingpedia.builtin.thingengine.builtin.get_gps()) filter !(location == p_location)
  #_[utterances=["when i move away from $p_location", "when my location changes away from $p_location", "when i leave $p_location"]]
  #[id=53269117]
  #[name="MonitorGetCurrentLocationNotByLocation"];

  program = @org.thingpedia.builtin.thingengine.builtin.get_time()
  #_[utterances=["what time is it"]]
  #[id=53269120]
  #[name="GetTime"];

  program = @org.thingpedia.builtin.thingengine.builtin.get_date()
  #_[utterances=["what day is today", "what day is it"]]
  #[id=53269122]
  #[name="GetDate"];

  query = @org.thingpedia.builtin.thingengine.builtin.get_random_between()
  #_[utterances=[", choose a random number", ", throw a dice"]]
  #[id=53269126]
  #[name="GetRandomInteger"];

  query (p_low : Number, p_high : Number) = @org.thingpedia.builtin.thingengine.builtin.get_random_between(high=p_high, low=p_low)
  #_[utterances=["a random number between ${p_low:const} and ${p_high:const}", "a random integer between ${p_low:const} and ${p_high:const}", ", throw a dice between ${p_low:const} and ${p_high:const}", ", generate a random number between ${p_low:const} and ${p_high:const}", ", choose a number between ${p_low:const} and ${p_high:const}"]]
  #[id=53269129]
  #[name="GetRandomIntegerWithLowWithHigh"];

  query (p_device : Entity(tt:device)) = @org.thingpedia.builtin.thingengine.builtin.device_info(id=p_device)
  #_[utterances=["information about ${p_device}", "help with ${p_device}", "${p_device} help", "${p_device} documentation"]]
  #[name="DeviceInfoWithDevice"];

  query = @org.thingpedia.builtin.thingengine.builtin.configured_device_info()
  #_[utterances=["information about configured devices", "information about configured entities", "device list", "entity list", "all devices", "configured devices", "configured entities", "recognized devices", "recognized entities"]]
  #[name="ConfiguredDeviceInfo"];

  action (p_message : String) = @org.thingpedia.builtin.thingengine.builtin.say(message=p_message)
  #_[utterances=["send me a message ${p_message:const}", "tell me $p_message", "say $p_message"]]
  #[id=53269140]
  #[name="SayWithMessage"];

  action (p_url : Entity(tt:url)) = @org.thingpedia.builtin.thingengine.builtin.open_url(url=p_url)
  #_[utterances=["open $p_url", "open the file at $p_url", "open $p_url in the browser", "browse to $p_url"]]
  #[id=53269149]
  #[name="OpenUrlOnBuiltinWithUrl"];

  action (p_device : Entity(tt:device)) = @org.thingpedia.builtin.thingengine.builtin.configure(device=p_device)
  #_[utterances=["configure $p_device", "setup $p_device", "enable $p_device", "install $p_device", "connect to $p_device", "add a new $p_device account"]]
  #[id=53269136]
  #[name="ConfigureWithDevice"];

  action (p_status : Enum(on, off)) = @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=p_status)
  #_[utterances=["turn ${p_status:no-undefined} voice output"]];

  program (p_status : Enum(on, off)) = @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=p_status)
  #_[utterances=["turn ${p_status:no-undefined} your voice"]];

  program = @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum on)
  #_[utterances=["start speaking", "talk to me", "use voice to talk to me", "speak to me"]];

  program = @org.thingpedia.builtin.thingengine.builtin.set_voice_output(status=enum off)
  #_[utterances=["disable voice output"]];

  action (p_status : Enum(on, off)) = @org.thingpedia.builtin.thingengine.builtin.set_voice_input(status=p_status)
  #_[utterances=["turn ${p_status} voice input"]];

  program = @org.thingpedia.builtin.thingengine.builtin.set_voice_input(status=enum on)
  #_[utterances=["start listening", "i want to use my voice", "listen to me"]];

  program = @org.thingpedia.builtin.thingengine.builtin.set_voice_input(status=enum off)
  #_[utterances=["disable voice input", "stop listening"]];

  program (p_name : String) = @org.thingpedia.builtin.thingengine.builtin.set_name(name=p_name)
  #_[utterances=["call me ${p_name:no-undefined}", "refer to me as ${p_name:no-undefined}", "i am ${p_name:no-undefined}", "my name is ${p_name:no-undefined}", "i would like you to call me ${p_name:no-undefined}"]];

  action (p_type : Enum(current, home, work)) = @org.thingpedia.builtin.thingengine.builtin.set_location(type=p_type)
  #_[utterances=["set my ${p_type:no-undefined} location", "set my ${p_type:no-undefined} address", "remember my ${p_type:no-undefined} location", "change my ${p_type:no-undefined} address"]];

  program (p_location : Location) = @org.thingpedia.builtin.thingengine.builtin.set_location(location=p_location)
  #_[utterances=["my address is ${p_location:no-undefined}", "my location is ${p_location:no-undefined}"]];

  program (p_type : Enum(current, home, work), p_location : Location) = @org.thingpedia.builtin.thingengine.builtin.set_location(location=p_location, type=p_type)
  #_[utterances=["my ${p_type:no-undefined} address is ${p_location:no-undefined}", "my ${p_type:no-undefined} is at ${p_location:no-undefined}"]];

  program (p_unit : Enum(celsius, fahrenheit, kelvin)) = @org.thingpedia.builtin.thingengine.builtin.set_temperature_unit(unit=p_unit)
  #_[utterances=["use ${p_unit:no-undefined} for temperatures", "use ${p_unit:no-undefined} to display temperatures", "tell me the temperature in ${p_unit:no-undefined}"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_identity)
  #_[utterances=["Who are you?", "What are you?", "What is Genie?", "Are you Genie?", "What is your name?", "What's your name?", "Whats your name?", "Who created you?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_age)
  #_[utterances=["How old are you?", "When were you born?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_how_are_you)
  #_[utterances=["How are you?", "How are u?", "How are you doing?", "How are u doing?", "How are you today?", "How are u today?", "How are you feeling today?", "How are u feeling today?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_special)
  #_[utterances=["What makes you special?", "What makes you unique?", "What makes you different?", "What is special about you?", "What is unique about you?", "What is different about you?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_motivation)
  #_[utterances=["Why should I care about you?", "Why should I care about genie?", "Why should I care about the assistant?", "Why should home assistant users care about you?", "Why should home assistant users care about genie?", "Why should home assistant users care about the assistant?", "Why should ha users care about you?", "Why should ha users care about genie?", "Why should ha users care about the assistant?", "What is important about you for home assistant users?", "What is important about you for ha users?", "Why are you important for home assistant users?", "Why are you important for ha users?", "Are you spying on me?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_location)
  #_[utterances=["Where are you?", "Where are you now?", "Where is the server located?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_comparison)
  #_[utterances=["Are you better than Cortana?", "Are you better than Siri?", "Are you better than Alexa?", "Are you better than Google?", "Are you better than Google Assistant?", "Are you better than Google Home?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_comparison_general)
  #_[utterances=["Do you know Cortana?", "Do you know Siri?", "Do you know Alexa?", "Do you know Google?", "Do you know Google Assistant?", "Do you know Google Home?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_training)
  #_[utterances=["Are you good at training?", "can you learn?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_partner)
  #_[utterances=["Do you have a partner?", "Do you have a significant other?", "Do you have a gf?", "Do you have a girlfriend?", "Do you have a bf?", "Do you have a boyfriend?", "Do you have a enbyfriend?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_junk)
  #_[utterances=["Do you know what porn is?", "Don't know nothing."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_preference)
  #_[utterances=["What is your favorite song?", "What is your favorite movie?", "What is your favorite book?", "What is your favourite song?", "What is your favourite movie?", "What is your favourite book?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_thingpedia)
  #_[utterances=["What is Thingpedia?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_interest)
  #_[utterances=["What do you like to do?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum about_almond_registration)
  #_[utterances=["I want to register a new user.", "I want to register a new account.", "I want to register a new user on Almond.", "I want to register a new account on Almond.", "How to create an account?", "How to register an account?", "How to create an account on Almond?", "How to register an account on Almond?", "How do I create a new account?", "How do I register a new account?", "How do I create a new account on Almond?", "How do I register a new account on Almond?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum check_capability_home_assistant)
  #_[utterances=["Do you work with Home Assistant?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum check_capability_phone)
  #_[utterances=["Do you support any phones?", "What phones do you support?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum check_capability_music_platform)
  #_[utterances=["Can't you use any free music platforms?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum general_help)
  #_[utterances=["What can you do?", "What can I do?", "What can you do for me?", "Help", "List commands", "Help skill", "What can I say?", "What do you do?", "What you can do?", "What can u do?", "What should I do?", "What command is available?", "What skills are there?", "What can you do at all?", "What could you do for me?", "Commands", "Devices", "Examples", "Can you give me another suggestion?", "Show skills"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum iot_help)
  #_[utterances=["What kind of IoT devices", "What IoT devices can you work with?", "What devices can I connect you to?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum command_help)
  #_[utterances=["List all commands"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_thanks)
  #_[utterances=["Lol", "Cool", "Nice", "I love you", "Great", "Good job", "Very funny", "Super", ":-)", ":o", "Good boy", "You are amazing"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum positive_emotion_cool)
  #_[utterances=["Funny", "Haha", "Wow", "Hahaha", "Funny haha", "I love programming"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum negative_emotion_empathy)
  #_[utterances=["Sad"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum abusive)
  #_[utterances=["You suck", "Kill yourself", "Go die", "Fuck you"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum revoke_consent)
  #_[utterances=["Revoke consent.", "Stop recording my commands."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_train)
  #_[utterances=["How do I train you?", "that was a bad one.", "It didn't work."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_configure_skill)
  #_[utterances=["What does it mean to configure something?", "How do I configure new skills?", "where is your skills page?", "My skills.", "More skills.", "Use a skill.", "manage iot devices."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_disable_skill)
  #_[utterances=["How do I disable a skill?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_set_language)
  #_[utterances=["How do I change the language?", "Which languages do you know?", "list language.", "language list.", "Do I have to speak english with you?", "Do I have to speak english to you?", "I can not read the font."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_access_settings)
  #_[utterances=["Where is Genie settings?", "How to change preferences?", "configure voice assistant."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_use_wakeword)
  #_[utterances=["How do I use voice commands?", "How do I use hotword detection?", "How do I use wake word detection?", "What is the wake word?", "How do I enable audio?", "Voice assistant."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_report_bug)
  #_[utterances=["how do i report a bug?", "I have found a bug.", "Debug."]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_show_general_examples)
  #_[utterances=["Can you show me some examples?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum how_to_show_home_assistant_examples)
  #_[utterances=["Can you show me some home assistant examples?"]];

  program = @org.thingpedia.builtin.thingengine.builtin.faq_reply(question=enum troubleshooting_home_assistant)
  #_[utterances=["Help in recognizing Home Assistant entities.", "Help Home Assistant."]];
}