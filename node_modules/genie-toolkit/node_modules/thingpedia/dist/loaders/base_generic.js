"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Thingpedia
//
// Copyright 2019-2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Utils = __importStar(require("../utils"));
const compat_1 = require("../compat");
const ConfigMixins = __importStar(require("../config"));
const base_device_1 = __importDefault(require("../base_device"));
const base_1 = __importDefault(require("./base"));
class BaseGenericLoader extends base_1.default {
    constructor(kind, manifest, parents) {
        super(kind, manifest, parents);
        this._loaded = null;
        this._config = ConfigMixins.get(this._manifest);
    }
    _loadModule() {
        let params = [];
        if (this._config) {
            if (this._config.module === 'org.thingpedia.config.form')
                // eslint-disable-next-line @typescript-eslint/ban-types
                params = Object.keys(Utils.findMixinArg(this._config.mixin, 'params'));
            else if (this._config.module === 'org.thingpedia.config.oauth2')
                params = Utils.findMixinArg(this._config.mixin, 'profile') || [];
        }
        const newClass = class GenericDevice extends base_device_1.default {
            constructor(engine, state) {
                super(engine, state);
                this.params = params.map((k) => state[k]);
            }
            async checkAvailable() {
                return base_device_1.default.Availability.AVAILABLE;
            }
        };
        if (this._config)
            this._config.install(newClass);
        newClass.manifest = this._manifest;
        newClass.metadata = compat_1.makeBaseDeviceMetadata(this._manifest);
        this._loaded = newClass;
    }
    get config() {
        return this._config;
    }
    clearCache() {
        // nothing to do here
    }
    getDeviceClass() {
        if (this._loaded === null) {
            try {
                this._loadModule();
            }
            catch (e) {
                this._loaded = null;
                return Promise.reject(e);
            }
        }
        return Promise.resolve(this._loaded);
    }
}
exports.default = BaseGenericLoader;
//# sourceMappingURL=base_generic.js.map