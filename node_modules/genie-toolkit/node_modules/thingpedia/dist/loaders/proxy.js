"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Thingpedia
//
// Copyright 2019 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Utils = __importStar(require("../utils"));
const Helpers = __importStar(require("../helpers"));
const errors_1 = require("../errors");
const base_generic_1 = __importDefault(require("./base_generic"));
/**
 * A loader that creates a device class proxying all ThingTalk function calls through the
 * Thingpedia API.
 *
 * This is used when a Thingpedia skill is unavailable locally due to missing
 * API keys.
 */
class ProxyLoader extends base_generic_1.default {
    constructor(kind, manifest, parents, loader) {
        super(kind, manifest, parents);
        this._tpClient = loader.client;
    }
    _loadModule() {
        super._loadModule();
        const tpClient = this._tpClient;
        for (const [action,] of this._iterateFunctions(this._manifest, 'actions')) {
            this._loaded.prototype['do_' + action] = function (params) {
                // actions cannot be proxied
                throw new errors_1.UnsupportedError();
            };
        }
        for (const [query, fndef] of this._iterateFunctions(this._manifest, 'queries')) {
            const pollInterval = Utils.getPollInterval(fndef);
            this._loaded.prototype['get_' + query] = function (params, hints, env) {
                return tpClient.invokeQuery(this.kind, this.uniqueId, query, params, hints);
            };
            if (pollInterval === 0) {
                this._loaded.prototype['subscribe_' + query] = function () {
                    // subscribe calls cannot be proxied yet, because the subscription state would need to be replicated
                    // on the server
                    throw new errors_1.UnsupportedError();
                };
            }
            if (pollInterval > 0) {
                this._loaded.prototype['subscribe_' + query] = function (params, state, hints, env) {
                    return new Helpers.PollingStream(state, pollInterval, () => this['get_' + query](params, hints, env));
                };
            }
            else {
                this._loaded.prototype['subscribe_' + query] = function () {
                    throw new Error('This query is non-deterministic and cannot be monitored');
                };
            }
        }
    }
}
exports.default = ProxyLoader;
//# sourceMappingURL=proxy.js.map