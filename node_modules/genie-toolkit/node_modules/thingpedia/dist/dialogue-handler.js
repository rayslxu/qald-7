"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of Thingpedia
//
// Copyright 2021 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
Object.defineProperty(exports, "__esModule", { value: true });
var DialogueHandler;
(function (DialogueHandler) {
    /**
     * The priority of this dialogue handler.
     */
    let Priority;
    (function (Priority) {
        /**
         * Fallback, only used if no dialogue handler is available.
         *
         * Equivalent to "Sorry, I did not understand that." or throwing the
         * query to a search engine.
         */
        Priority[Priority["FALLBACK"] = 0] = "FALLBACK";
        /**
         * Can take over if confident, or if no other dialogue handler is available.
         */
        Priority[Priority["SECONDARY"] = 1] = "SECONDARY";
        /**
         * Will always take over if confident or almost confident
         */
        Priority[Priority["PRIMARY"] = 2] = "PRIMARY";
    })(Priority = DialogueHandler.Priority || (DialogueHandler.Priority = {}));
    /**
     * How confident the dialogue handler is that it can handle a given utterance.
     */
    let Confidence;
    (function (Confidence) {
        /**
         * The dialogue handler matched this utterance exactly (using some template
         * or regular expression), and it is a direct command that should take over
         * from other dialogue handlers.
         */
        Confidence[Confidence["EXACT_IN_DOMAIN_COMMAND"] = 0] = "EXACT_IN_DOMAIN_COMMAND";
        /**
         * The dialogue handler is strongly confident (above the normal confidence
         * level) that the utterance is in-domain, and it
         * is a direct command that should take over from other dialogue handlers.
         */
        Confidence[Confidence["STRONGLY_CONFIDENT_IN_DOMAIN_COMMAND"] = 1] = "STRONGLY_CONFIDENT_IN_DOMAIN_COMMAND";
        /**
         * The dialogue handler is confident that the utterance is in-domain, and it
         * is a direct command that should take over from other dialogue handlers.
         *
         * This is the normal level of confidence that should be used in case confidence
         * estimation is not available.
         */
        Confidence[Confidence["CONFIDENT_IN_DOMAIN_COMMAND"] = 2] = "CONFIDENT_IN_DOMAIN_COMMAND";
        /**
         * The utterance is potentially in-domain, but the confidence is low. The
         * utterance is recognized as a direct command that should take over from other
         * dialogue handlers.
         */
        Confidence[Confidence["NONCONFIDENT_IN_DOMAIN_COMMAND"] = 3] = "NONCONFIDENT_IN_DOMAIN_COMMAND";
        /**
         * The dialogue handler matched this utterance exactly (using some template
         * or regular expression), and it is a follow-up to the current dialogue handler state.
         *
         * The utterance will not be dispatched if the dialogue handler is not current.
         */
        Confidence[Confidence["EXACT_IN_DOMAIN_FOLLOWUP"] = 4] = "EXACT_IN_DOMAIN_FOLLOWUP";
        /**
         * The dialogue handler is strongly confident (above the normal confidence
         * level) that the utterance is in-domain, and it is a follow-up to the current
         * dialogue handler state.
         *
         * The utterance will not be dispatched if the dialogue handler is not current.
         */
        Confidence[Confidence["STRONGLY_CONFIDENT_IN_DOMAIN_FOLLOWUP"] = 5] = "STRONGLY_CONFIDENT_IN_DOMAIN_FOLLOWUP";
        /**
         * The dialogue handler is confident that the utterance is in-domain, and it
         * is a follow-up to the current dialogue handler state.
         *
         * This is the normal level of confidence that should be used in case confidence
         * estimation is not available, and the utterance is a follow-up.
         *
         * The utterance will not be dispatched if the dialogue handler is not current.
         */
        Confidence[Confidence["CONFIDENT_IN_DOMAIN_FOLLOWUP"] = 6] = "CONFIDENT_IN_DOMAIN_FOLLOWUP";
        /**
         * The utteerance is potentially in-domain, but the confidence is low. The
         * utterance is recognized a follow-up to the current dialogue handler state.
         *
         * The utterance will not be dispatched if the dialogue handler is not current.
         */
        Confidence[Confidence["NONCONFIDENT_IN_DOMAIN_FOLLOWUP"] = 7] = "NONCONFIDENT_IN_DOMAIN_FOLLOWUP";
        /**
         * The command is definitely out-of-domain and this dialogue handler cannot reply to this command.
         */
        Confidence[Confidence["OUT_OF_DOMAIN_COMMAND"] = 8] = "OUT_OF_DOMAIN_COMMAND";
    })(Confidence = DialogueHandler.Confidence || (DialogueHandler.Confidence = {}));
})(DialogueHandler || (DialogueHandler = {}));
exports.default = DialogueHandler;
//# sourceMappingURL=dialogue-handler.js.map