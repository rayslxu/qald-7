/// <reference types="node" />
import * as events from 'events';
import RefCounted from './helpers/ref_counted';
declare abstract class Messaging extends events.EventEmitter {
    constructor();
    get isAvailable(): boolean;
    get account(): void;
    getIdentities(): string[];
    getFeedList(): Promise<Messaging.Feed[]>;
    getFeed(feedId: string): Promise<Messaging.Feed>;
    getFeedWithContact(contactId: string): Promise<Messaging.Feed>;
    searchAccountByName(name: string): Promise<any>;
    getAccountForIdentity(identity: string): Promise<string>;
}
declare namespace Messaging {
    class Feed extends RefCounted {
        readonly feedId: string;
        constructor(feedId: string);
        _doOpen(): Promise<void>;
        _doClose(): Promise<void>;
        sendText(): Promise<void>;
        sendItem(): Promise<void>;
        sendRaw(): Promise<void>;
    }
}
export default Messaging;
