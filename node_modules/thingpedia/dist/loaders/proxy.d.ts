import * as ThingTalk from 'thingtalk';
import ModuleDownloader from '../downloader';
import Base from './base_generic';
/**
 * A loader that creates a device class proxying all ThingTalk function calls through the
 * Thingpedia API.
 *
 * This is used when a Thingpedia skill is unavailable locally due to missing
 * API keys.
 */
export default class ProxyLoader extends Base {
    private _tpClient;
    constructor(kind: string, manifest: ThingTalk.Ast.ClassDef, parents: Record<string, ThingTalk.Ast.ClassDef>, loader: ModuleDownloader);
    protected _loadModule(): void;
}
