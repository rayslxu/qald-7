import * as ThingTalk from 'thingtalk';
import * as ConfigMixins from '../config';
import BaseDevice from '../base_device';
import BaseLoader from './base';
export default class BaseGenericLoader extends BaseLoader {
    protected _loaded: BaseDevice.DeviceClass<BaseDevice> | null;
    protected _config: ConfigMixins.Base | null;
    constructor(kind: string, manifest: ThingTalk.Ast.ClassDef, parents: Record<string, ThingTalk.Ast.ClassDef>);
    protected _loadModule(): void;
    get config(): ConfigMixins.Base | null;
    clearCache(): void;
    getDeviceClass(): Promise<BaseDevice.DeviceClass<BaseDevice>>;
}
