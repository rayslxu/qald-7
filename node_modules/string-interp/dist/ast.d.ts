declare type ListFormatType = ('conjunction' | 'disjunction');
export declare class Placeholder {
    param: string;
    arraystyle: ListFormatType | undefined;
    option: string;
    precision: number;
    'default': Expansion | null;
    constructor(param: string, arraystyle: ListFormatType | undefined, option?: string, precision?: number, _default?: Expansion | null);
}
export declare class Optional {
    pattern: Expansion;
    constructor(pattern: Expansion);
}
export declare class Plural {
    param: string;
    type: Intl.PluralRuleType;
    variants: Map<string | number, Expansion>;
    constructor(param: string, type: Intl.PluralRuleType, variants: Map<string | number, Expansion>);
}
export declare class Select {
    param: string;
    variants: Map<string, Expansion>;
    constructor(param: string, variants: Map<string, Expansion>);
}
export declare type Chunk = string | Placeholder | Optional | Plural | Select;
export declare type Expansion = Chunk[];
export {};
