"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of ThingTalk
//
// Copyright 2020 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addParenthesis = exports.SyntaxPriority = void 0;
const list_1 = __importDefault(require("../utils/list"));
var SyntaxPriority;
(function (SyntaxPriority) {
    // priority of table-like expressions
    SyntaxPriority[SyntaxPriority["Chain"] = 0] = "Chain";
    SyntaxPriority[SyntaxPriority["Join"] = 1] = "Join";
    SyntaxPriority[SyntaxPriority["Projection"] = 2] = "Projection";
    SyntaxPriority[SyntaxPriority["Filter"] = 3] = "Filter";
    SyntaxPriority[SyntaxPriority["Alias"] = 4] = "Alias";
    SyntaxPriority[SyntaxPriority["Index"] = 5] = "Index";
    // low-priority scalar expression
    SyntaxPriority[SyntaxPriority["ArrayField"] = 6] = "ArrayField";
    // priority of boolean expressions
    SyntaxPriority[SyntaxPriority["Or"] = 7] = "Or";
    SyntaxPriority[SyntaxPriority["And"] = 8] = "And";
    SyntaxPriority[SyntaxPriority["Comp"] = 9] = "Comp";
    SyntaxPriority[SyntaxPriority["Not"] = 10] = "Not";
    // priority of scalar expression
    SyntaxPriority[SyntaxPriority["Add"] = 11] = "Add";
    SyntaxPriority[SyntaxPriority["Mul"] = 12] = "Mul";
    SyntaxPriority[SyntaxPriority["Exp"] = 13] = "Exp";
    SyntaxPriority[SyntaxPriority["Primary"] = 14] = "Primary";
})(SyntaxPriority = exports.SyntaxPriority || (exports.SyntaxPriority = {}));
function addParenthesis(p1, p2, syntax) {
    if (p1 > p2)
        return list_1.default.concat('(', syntax, ')');
    else
        return list_1.default.concat(syntax);
}
exports.addParenthesis = addParenthesis;
//# sourceMappingURL=syntax_priority.js.map