"use strict";
// -*- mode: typescript; indent-tabs-mode: nil; js-basic-offset: 4 -*-
//
// This file is part of ThingTalk
//
// Copyright 2018-2019 The Board of Trustees of the Leland Stanford Junior University
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Giovanni Campagna <gcampagn@cs.stanford.edu>
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnserializableError = exports.ThingTalkSyntaxError = exports.ThingTalkTypeError = exports.NotCompilableError = exports.NotImplementedError = void 0;
class NotImplementedError extends Error {
    constructor(construct) {
        super('NOT IMPLEMENTED: ' + construct);
    }
}
exports.NotImplementedError = NotImplementedError;
class NotCompilableError extends Error {
}
exports.NotCompilableError = NotCompilableError;
class ThingTalkTypeError extends Error {
    constructor(message, location) {
        super(message);
        this.name = "TypeError";
        this.location = location || null;
    }
}
exports.ThingTalkTypeError = ThingTalkTypeError;
class ThingTalkSyntaxError extends Error {
    constructor(message, location) {
        super(message);
        this.name = "SyntaxError";
        this.location = location || null;
    }
}
exports.ThingTalkSyntaxError = ThingTalkSyntaxError;
class UnserializableError extends Error {
    constructor(what) {
        super(what + ' is not serializable');
    }
}
exports.UnserializableError = UnserializableError;
//# sourceMappingURL=errors.js.map