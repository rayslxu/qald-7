
const TERMINAL_IDS : $runtime.SymbolTable = {" 0PAD":0," 1EOF":1," 2START":2,"<":3,"==":4,"=~":5,">":6,"monitor":7,"notify":8,"num0":9,"num1":10,"param:number":11,"param:text":12,"qs0":13,"qs1":14,"thermostat.get_temp":15,"twitter.post":16,"twitter.search":17,"xkcd.get_comic":18};
const RULE_NON_TERMINALS : number[] = [5,5,8,2,2,11,11,11,9,4,4,4,1,1,6,6,7,7,10,10,3,3,3,3,3,0];
const ARITY : number[] = [1,1,2,2,2,1,2,2,2,1,1,1,2,1,2,2,1,1,1,1,3,3,3,3,3,2];
const GOTO : $runtime.GotoTable = [{"2":2,"4":7,"5":1,"8":3,"9":4,"11":6},{},{},{},{"1":11},{"4":7,"11":13},{"1":15,"3":17,"6":16},{},{},{},{},{"6":20},{},{"3":17,"6":16},{},{"6":20},{},{},{"7":26},{"10":31},{},{"7":26},{"10":31},{"7":34},{"7":35},{"7":36},{},{},{},{"10":37},{"10":38},{},{},{},{},{},{},{},{}];
const PARSER_ACTION : $runtime.ActionTable = [{"7":[1,5],"15":[1,9],"17":[1,10],"18":[1,8]},{"1":[0,0]},{"1":[2,0]},{"1":[2,1]},{"16":[1,12]},{"15":[1,9],"17":[1,10],"18":[1,8]},{"8":[1,14],"11":[1,18],"12":[1,19],"16":[1,12]},{"8":[2,5],"11":[2,5],"12":[2,5],"16":[2,5]},{"8":[2,9],"11":[2,9],"12":[2,9],"16":[2,9]},{"8":[2,10],"11":[2,10],"12":[2,10],"16":[2,10]},{"8":[2,11],"11":[2,11],"12":[2,11],"16":[2,11]},{"1":[2,2],"11":[1,21],"12":[1,22]},{"1":[2,13],"11":[2,13],"12":[2,13]},{"11":[1,18],"12":[1,19],"16":[2,8]},{"1":[2,3]},{"1":[2,4],"11":[1,21],"12":[1,22]},{"8":[2,6],"11":[2,6],"12":[2,6],"16":[2,6]},{"8":[2,7],"11":[2,7],"12":[2,7],"16":[2,7]},{"3":[1,25],"4":[1,23],"6":[1,24],"9":[1,27],"10":[1,28]},{"4":[1,29],"5":[1,30],"13":[1,32],"14":[1,33]},{"1":[2,12],"11":[2,12],"12":[2,12]},{"9":[1,27],"10":[1,28]},{"13":[1,32],"14":[1,33]},{"9":[1,27],"10":[1,28]},{"9":[1,27],"10":[1,28]},{"9":[1,27],"10":[1,28]},{"1":[2,14],"8":[2,14],"11":[2,14],"12":[2,14],"16":[2,14]},{"1":[2,16],"8":[2,16],"11":[2,16],"12":[2,16],"16":[2,16]},{"1":[2,17],"8":[2,17],"11":[2,17],"12":[2,17],"16":[2,17]},{"13":[1,32],"14":[1,33]},{"13":[1,32],"14":[1,33]},{"1":[2,15],"8":[2,15],"11":[2,15],"12":[2,15],"16":[2,15]},{"1":[2,18],"8":[2,18],"11":[2,18],"12":[2,18],"16":[2,18]},{"1":[2,19],"8":[2,19],"11":[2,19],"12":[2,19],"16":[2,19]},{"8":[2,20],"11":[2,20],"12":[2,20],"16":[2,20]},{"8":[2,21],"11":[2,21],"12":[2,21],"16":[2,21]},{"8":[2,22],"11":[2,22],"12":[2,22],"16":[2,22]},{"8":[2,23],"11":[2,23],"12":[2,23],"16":[2,23]},{"8":[2,24],"11":[2,24],"12":[2,24],"16":[2,24]}];
const SEMANTIC_ACTION = [
(($ : $runtime.ParserInterface<any>, $0 : any) : any => { return $0; }),
(($ : $runtime.ParserInterface<any>, $0 : any) : any => { return $0; }),
(($ : $runtime.ParserInterface<any>, stream : any, action : any) : any => `combine ${stream} with ${action}`),
(($ : $runtime.ParserInterface<any>, table : any, $0 : "notify") : any => `${table} then notify`),
(($ : $runtime.ParserInterface<any>, table : any, action : any) : any => `combine ${table} with ${action}`),
(($ : $runtime.ParserInterface<any>, $0 : any) : any => { return $0; }),
(($ : $runtime.ParserInterface<any>, get : any, ip : any) : any => `apply ${get} ${ip}`),
(($ : $runtime.ParserInterface<any>, table : any, filter : any) : any => `apply ${filter} to ${table}`),
(($ : $runtime.ParserInterface<any>, $0 : "monitor", table : any) : any => `monitor ${table}`),
(($ : $runtime.ParserInterface<any>, $0 : "xkcd.get_comic") : any => `xkcd.get_comic`),
(($ : $runtime.ParserInterface<any>, $0 : "thermostat.get_temp") : any => `thermostat.get_temp`),
(($ : $runtime.ParserInterface<any>, $0 : "twitter.search") : any => `twitter.search`),
(($ : $runtime.ParserInterface<any>, action : any, ip : any) : any => `apply ${action} ${ip}`),
(($ : $runtime.ParserInterface<any>, $0 : "twitter.post") : any => `twitter.post`),
(($ : $runtime.ParserInterface<any>, $0 : "param:number", num : any) : any => `number = ${num}`),
(($ : $runtime.ParserInterface<any>, $0 : "param:text", str : any) : any => `string = ${str}`),
(($ : $runtime.ParserInterface<any>, $0 : "num0") : any => `num0`),
(($ : $runtime.ParserInterface<any>, $0 : "num1") : any => `num1`),
(($ : $runtime.ParserInterface<any>, $0 : "qs0") : any => `qs0`),
(($ : $runtime.ParserInterface<any>, $0 : "qs1") : any => `qs1`),
(($ : $runtime.ParserInterface<any>, $0 : "param:number", $1 : "==", num : any) : any => `number == ${num}`),
(($ : $runtime.ParserInterface<any>, $0 : "param:number", $1 : ">", num : any) : any => `number > ${num}`),
(($ : $runtime.ParserInterface<any>, $0 : "param:number", $1 : "<", num : any) : any => `number < ${num}`),
(($ : $runtime.ParserInterface<any>, $0 : "param:text", $1 : "==", str : any) : any => `text == ${str}`),
(($ : $runtime.ParserInterface<any>, $0 : "param:text", $1 : "=~", str : any) : any => `text =~ ${str}`),
(($ : $runtime.ParserInterface<any>, $0 : any) : any => $0),
];
import * as $runtime from './../lib/utils/sr_parser_runtime';
export default $runtime.createParser<any, any>({ TERMINAL_IDS, RULE_NON_TERMINALS, ARITY, GOTO, PARSER_ACTION, SEMANTIC_ACTION });
